{
  "version":"2.0",
  "metadata":{
    "apiVersion":"2013-04-01",
    "endpointPrefix":"route53",
    "globalEndpoint":"route53.amazonaws.com",
    "protocol":"rest-xml",
    "serviceAbbreviation":"Route 53",
    "serviceFullName":"Amazon Route 53",
    "signatureVersion":"v4"
  },
  "operations":{
    "AssociateVPCWithHostedZone":{
      "name":"AssociateVPCWithHostedZone",
      "http":{
        "method":"POST",
        "requestUri":"/2013-04-01/hostedzone/{Id}/associatevpc"
      },
      "input":{
        "shape":"AssociateVPCWithHostedZoneRequest",
        "locationName":"AssociateVPCWithHostedZoneRequest",
        "xmlNamespace":{"uri":"https://route53.amazonaws.com/doc/2013-04-01/"}
      },
      "output":{"shape":"AssociateVPCWithHostedZoneResponse"},
      "errors":[
        {"shape":"NoSuchHostedZone"},
        {"shape":"InvalidVPCId"},
        {"shape":"InvalidInput"},
        {"shape":"PublicZoneVPCAssociation"},
        {"shape":"ConflictingDomainExists"},
        {"shape":"LimitsExceeded"}
      ],
      "documentation":"<p>This action associates a VPC with an hosted zone. </p> <p>To associate a VPC with an hosted zone, send a <code>POST</code> request to the <code>/<i>Route 53 API version</i>/hostedzone/<i>hosted zone ID</i>/associatevpc</code> resource. The request body must include a document with a <code>AssociateVPCWithHostedZoneRequest</code> element. The response returns the <code>AssociateVPCWithHostedZoneResponse</code> element that contains <code>ChangeInfo</code> for you to track the progress of the <code>AssociateVPCWithHostedZoneRequest</code> you made. See <code>GetChange</code> operation for how to track the progress of your change.</p>"
    },
    "ChangeResourceRecordSets":{
      "name":"ChangeResourceRecordSets",
      "http":{
        "method":"POST",
        "requestUri":"/2013-04-01/hostedzone/{Id}/rrset/"
      },
      "input":{
        "shape":"ChangeResourceRecordSetsRequest",
        "locationName":"ChangeResourceRecordSetsRequest",
        "xmlNamespace":{"uri":"https://route53.amazonaws.com/doc/2013-04-01/"}
      },
      "output":{"shape":"ChangeResourceRecordSetsResponse"},
      "errors":[
        {"shape":"NoSuchHostedZone"},
        {"shape":"NoSuchHealthCheck"},
        {"shape":"InvalidChangeBatch"},
        {"shape":"InvalidInput"},
        {"shape":"PriorRequestNotComplete"}
      ],
      "documentation":"<p>Use this action to create or change your authoritative DNS information. To use this action, send a <code>POST</code> request to the <code>/<i>Route 53 API version</i>/hostedzone/<i>hosted Zone ID</i>/rrset</code> resource. The request body must include a document with a <code>ChangeResourceRecordSetsRequest</code> element.</p> <p>Changes are a list of change items and are considered transactional. For more information on transactional changes, also known as change batches, see <a href=\"http://docs.aws.amazon.com/Route53/latest/APIReference/API_ChangeResourceRecordSets.html\">POST ChangeResourceRecordSets</a> in the <i>Amazon Route 53 API Reference</i>.</p> <important>Due to the nature of transactional changes, you cannot delete the same resource record set more than once in a single change batch. If you attempt to delete the same change batch more than once, Amazon Route 53 returns an <code>InvalidChangeBatch</code> error.</important> <p>In response to a <code>ChangeResourceRecordSets</code> request, your DNS data is changed on all Amazon Route 53 DNS servers. Initially, the status of a change is <code>PENDING</code>. This means the change has not yet propagated to all the authoritative Amazon Route 53 DNS servers. When the change is propagated to all hosts, the change returns a status of <code>INSYNC</code>.</p> <p>Note the following limitations on a <code>ChangeResourceRecordSets</code> request:</p> <ul> <li>A request cannot contain more than 100 Change elements.</li> <li> A request cannot contain more than 1000 ResourceRecord elements.</li> <li>The sum of the number of characters (including spaces) in all <code>Value</code> elements in a request cannot exceed 32,000 characters.</li> </ul>"
    },
    "ChangeTagsForResource":{
      "name":"ChangeTagsForResource",
      "http":{
        "method":"POST",
        "requestUri":"/2013-04-01/tags/{ResourceType}/{ResourceId}"
      },
      "input":{
        "shape":"ChangeTagsForResourceRequest",
        "locationName":"ChangeTagsForResourceRequest",
        "xmlNamespace":{"uri":"https://route53.amazonaws.com/doc/2013-04-01/"}
      },
      "output":{"shape":"ChangeTagsForResourceResponse"},
      "errors":[
        {"shape":"InvalidInput"},
        {"shape":"NoSuchHealthCheck"},
        {"shape":"NoSuchHostedZone"},
        {"shape":"PriorRequestNotComplete"},
        {"shape":"ThrottlingException"}
      ]
    },
    "CreateHealthCheck":{
      "name":"CreateHealthCheck",
      "http":{
        "method":"POST",
        "requestUri":"/2013-04-01/healthcheck",
        "responseCode":201
      },
      "input":{
        "shape":"CreateHealthCheckRequest",
        "locationName":"CreateHealthCheckRequest",
        "xmlNamespace":{"uri":"https://route53.amazonaws.com/doc/2013-04-01/"}
      },
      "output":{"shape":"CreateHealthCheckResponse"},
      "errors":[
        {"shape":"TooManyHealthChecks"},
        {"shape":"HealthCheckAlreadyExists"},
        {"shape":"InvalidInput"}
      ],
      "documentation":"<p>This action creates a new health check.</p> <p>To create a new health check, send a <code>POST</code> request to the <code>/<i>Route 53 API version</i>/healthcheck</code> resource. The request body must include a document with a <code>CreateHealthCheckRequest</code> element. The response returns the <code>CreateHealthCheckResponse</code> element that contains metadata about the health check.</p>"
    },
    "CreateHostedZone":{
      "name":"CreateHostedZone",
      "http":{
        "method":"POST",
        "requestUri":"/2013-04-01/hostedzone",
        "responseCode":201
      },
      "input":{
        "shape":"CreateHostedZoneRequest",
        "locationName":"CreateHostedZoneRequest",
        "xmlNamespace":{"uri":"https://route53.amazonaws.com/doc/2013-04-01/"}
      },
      "output":{"shape":"CreateHostedZoneResponse"},
      "errors":[
        {"shape":"InvalidDomainName"},
        {"shape":"HostedZoneAlreadyExists"},
        {"shape":"TooManyHostedZones"},
        {"shape":"InvalidVPCId"},
        {"shape":"InvalidInput"},
        {"shape":"DelegationSetNotAvailable"},
        {"shape":"ConflictingDomainExists"},
        {"shape":"NoSuchDelegationSet"},
        {"shape":"DelegationSetNotReusable"}
      ],
      "documentation":"<p>This action creates a new hosted zone.</p> <p>To create a new hosted zone, send a <code>POST</code> request to the <code>/<i>Route 53 API version</i>/hostedzone</code> resource. The request body must include a document with a <code>CreateHostedZoneRequest</code> element. The response returns the <code>CreateHostedZoneResponse</code> element that contains metadata about the hosted zone.</p> <p>Amazon Route 53 automatically creates a default SOA record and four NS records for the zone. The NS records in the hosted zone are the name servers you give your registrar to delegate your domain to. For more information about SOA and NS records, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/SOA-NSrecords.html\">NS and SOA Records that Amazon Route 53 Creates for a Hosted Zone</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>When you create a zone, its initial status is <code>PENDING</code>. This means that it is not yet available on all DNS servers. The status of the zone changes to <code>INSYNC</code> when the NS and SOA records are available on all Amazon Route 53 DNS servers. </p> <p>When trying to create a hosted zone using a reusable delegation set, you could specify an optional DelegationSetId, and Route53 would assign those 4 NS records for the zone, instead of alloting a new one.</p>"
    },
    "CreateReusableDelegationSet":{
      "name":"CreateReusableDelegationSet",
      "http":{
        "method":"POST",
        "requestUri":"/2013-04-01/delegationset",
        "responseCode":201
      },
      "input":{
        "shape":"CreateReusableDelegationSetRequest",
        "locationName":"CreateReusableDelegationSetRequest",
        "xmlNamespace":{"uri":"https://route53.amazonaws.com/doc/2013-04-01/"}
      },
      "output":{"shape":"CreateReusableDelegationSetResponse"},
      "errors":[
        {"shape":"DelegationSetAlreadyCreated"},
        {"shape":"LimitsExceeded"},
        {"shape":"HostedZoneNotFound"},
        {"shape":"InvalidArgument"},
        {"shape":"InvalidInput"},
        {"shape":"DelegationSetNotAvailable"},
        {"shape":"DelegationSetAlreadyReusable"}
      ],
      "documentation":"<p>This action creates a reusable delegationSet.</p> <p>To create a new reusable delegationSet, send a <code>POST</code> request to the <code>/<i>Route 53 API version</i>/delegationset</code> resource. The request body must include a document with a <code>CreateReusableDelegationSetRequest</code> element. The response returns the <code>CreateReusableDelegationSetResponse</code> element that contains metadata about the delegationSet. </p> <p>If the optional parameter HostedZoneId is specified, it marks the delegationSet associated with that particular hosted zone as reusable. </p>"
    },
    "CreateTrafficPolicy":{
      "name":"CreateTrafficPolicy",
      "http":{
        "method":"POST",
        "requestUri":"/2013-04-01/trafficpolicy",
        "responseCode":201
      },
      "input":{
        "shape":"CreateTrafficPolicyRequest",
        "locationName":"CreateTrafficPolicyRequest",
        "xmlNamespace":{"uri":"https://route53.amazonaws.com/doc/2013-04-01/"}
      },
      "output":{"shape":"CreateTrafficPolicyResponse"},
      "errors":[
        {"shape":"InvalidInput"},
        {"shape":"TooManyTrafficPolicies"},
        {"shape":"TrafficPolicyAlreadyExists"},
        {"shape":"InvalidTrafficPolicyDocument"}
      ],
      "documentation":"<p>Creates a traffic policy, which you use to create multiple DNS resource record sets for one domain name (such as example.com) or one subdomain name (such as www.example.com).</p> <p>To create a traffic policy, send a <code>POST</code> request to the <code>/<i>Route 53 API version</i>/trafficpolicy</code> resource. The request body must include a document with a <code>CreateTrafficPolicyRequest</code> element. The response includes the <code>CreateTrafficPolicyResponse</code> element, which contains information about the new traffic policy.</p>"
    },
    "CreateTrafficPolicyInstance":{
      "name":"CreateTrafficPolicyInstance",
      "http":{
        "method":"POST",
        "requestUri":"/2013-04-01/trafficpolicyinstance",
        "responseCode":201
      },
      "input":{
        "shape":"CreateTrafficPolicyInstanceRequest",
        "locationName":"CreateTrafficPolicyInstanceRequest",
        "xmlNamespace":{"uri":"https://route53.amazonaws.com/doc/2013-04-01/"}
      },
      "output":{"shape":"CreateTrafficPolicyInstanceResponse"},
      "errors":[
        {"shape":"NoSuchHostedZone"},
        {"shape":"InvalidInput"},
        {"shape":"TooManyTrafficPolicyInstances"},
        {"shape":"NoSuchTrafficPolicy"},
        {"shape":"TrafficPolicyInstanceAlreadyExists"}
      ],
      "documentation":"<p>Creates resource record sets in a specified hosted zone based on the settings in a specified traffic policy version. In addition, <code>CreateTrafficPolicyInstance</code> associates the resource record sets with a specified domain name (such as example.com) or subdomain name (such as www.example.com). Amazon Route 53 responds to DNS queries for the domain or subdomain name by using the resource record sets that <code>CreateTrafficPolicyInstance</code> created.</p> <p>To create a traffic policy instance, send a <code>POST</code> request to the <code>/<i>Route 53 API version</i>/trafficpolicyinstance</code> resource. The request body must include a document with a <code>CreateTrafficPolicyRequest</code> element. The response returns the <code>CreateTrafficPolicyInstanceResponse</code> element, which contains information about the traffic policy instance.</p>"
    },
    "CreateTrafficPolicyVersion":{
      "name":"CreateTrafficPolicyVersion",
      "http":{
        "method":"POST",
        "requestUri":"/2013-04-01/trafficpolicy/{Id}",
        "responseCode":201
      },
      "input":{
        "shape":"CreateTrafficPolicyVersionRequest",
        "locationName":"CreateTrafficPolicyVersionRequest",
        "xmlNamespace":{"uri":"https://route53.amazonaws.com/doc/2013-04-01/"}
      },
      "output":{"shape":"CreateTrafficPolicyVersionResponse"},
      "errors":[
        {"shape":"NoSuchTrafficPolicy"},
        {"shape":"InvalidInput"},
        {"shape":"ConcurrentModification"},
        {"shape":"InvalidTrafficPolicyDocument"}
      ],
      "documentation":"<p>Creates a new version of an existing traffic policy. When you create a new version of a traffic policy, you specify the ID of the traffic policy that you want to update and a JSON-formatted document that describes the new version.</p> <p>You use traffic policies to create multiple DNS resource record sets for one domain name (such as example.com) or one subdomain name (such as www.example.com).</p> <p>To create a new version, send a <code>POST</code> request to the <code>/<i>Route 53 API version</i>/trafficpolicy/</code> resource. The request body includes a document with a <code>CreateTrafficPolicyVersionRequest</code> element. The response returns the <code>CreateTrafficPolicyVersionResponse</code> element, which contains information about the new version of the traffic policy.</p>"
    },
    "DeleteHealthCheck":{
      "name":"DeleteHealthCheck",
      "http":{
        "method":"DELETE",
        "requestUri":"/2013-04-01/healthcheck/{HealthCheckId}"
      },
      "input":{"shape":"DeleteHealthCheckRequest"},
      "output":{"shape":"DeleteHealthCheckResponse"},
      "errors":[
        {"shape":"NoSuchHealthCheck"},
        {"shape":"HealthCheckInUse"},
        {"shape":"InvalidInput"}
      ],
      "documentation":"<p>This action deletes a health check. To delete a health check, send a <code>DELETE</code> request to the <code>/<i>Route 53 API version</i>/healthcheck/<i>health check ID</i></code> resource.</p> <important> You can delete a health check only if there are no resource record sets associated with this health check. If resource record sets are associated with this health check, you must disassociate them before you can delete your health check. If you try to delete a health check that is associated with resource record sets, Amazon Route 53 will deny your request with a <code>HealthCheckInUse</code> error. For information about disassociating the records from your health check, see <code>ChangeResourceRecordSets</code>.</important>"
    },
    "DeleteHostedZone":{
      "name":"DeleteHostedZone",
      "http":{
        "method":"DELETE",
        "requestUri":"/2013-04-01/hostedzone/{Id}"
      },
      "input":{"shape":"DeleteHostedZoneRequest"},
      "output":{"shape":"DeleteHostedZoneResponse"},
      "errors":[
        {"shape":"NoSuchHostedZone"},
        {"shape":"HostedZoneNotEmpty"},
        {"shape":"PriorRequestNotComplete"},
        {"shape":"InvalidInput"},
        {"shape":"InvalidDomainName"}
      ],
      "documentation":"<p>This action deletes a hosted zone. To delete a hosted zone, send a <code>DELETE</code> request to the <code>/<i>Route 53 API version</i>/hostedzone/<i>hosted zone ID</i></code> resource.</p> <important>You can delete a hosted zone only if there are no resource record sets other than the default SOA record and NS resource record sets. If your hosted zone contains other resource record sets, you must delete them before you can delete your hosted zone. If you try to delete a hosted zone that contains other resource record sets, Amazon Route 53 will deny your request with a <code>HostedZoneNotEmpty</code> error. For information about deleting records from your hosted zone, see <code>ChangeResourceRecordSets</code>.</important>"
    },
    "DeleteReusableDelegationSet":{
      "name":"DeleteReusableDelegationSet",
      "http":{
        "method":"DELETE",
        "requestUri":"/2013-04-01/delegationset/{Id}"
      },
      "input":{"shape":"DeleteReusableDelegationSetRequest"},
      "output":{"shape":"DeleteReusableDelegationSetResponse"},
      "errors":[
        {"shape":"NoSuchDelegationSet"},
        {"shape":"DelegationSetInUse"},
        {"shape":"DelegationSetNotReusable"},
        {"shape":"InvalidInput"}
      ],
      "documentation":"<p>This action deletes a reusable delegation set. To delete a reusable delegation set, send a <code>DELETE</code> request to the <code>/<i>Route 53 API version</i>/delegationset/<i>delegation set ID</i></code> resource.</p> <important> You can delete a reusable delegation set only if there are no associated hosted zones. If your reusable delegation set contains associated hosted zones, you must delete them before you can delete your reusable delegation set. If you try to delete a reusable delegation set that contains associated hosted zones, Amazon Route 53 will deny your request with a <code>DelegationSetInUse</code> error.</important>"
    },
    "DeleteTrafficPolicy":{
      "name":"DeleteTrafficPolicy",
      "http":{
        "method":"DELETE",
        "requestUri":"/2013-04-01/trafficpolicy/{Id}/{Version}"
      },
      "input":{"shape":"DeleteTrafficPolicyRequest"},
      "output":{"shape":"DeleteTrafficPolicyResponse"},
      "errors":[
        {"shape":"NoSuchTrafficPolicy"},
        {"shape":"InvalidInput"},
        {"shape":"TrafficPolicyInUse"},
        {"shape":"ConcurrentModification"}
      ],
      "documentation":"<p>Deletes a traffic policy. To delete a traffic policy, send a <code>DELETE</code> request to the <code>/<i>Route 53 API version</i>/trafficpolicy</code> resource.</p>"
    },
    "DeleteTrafficPolicyInstance":{
      "name":"DeleteTrafficPolicyInstance",
      "http":{
        "method":"DELETE",
        "requestUri":"/2013-04-01/trafficpolicyinstance/{Id}"
      },
      "input":{"shape":"DeleteTrafficPolicyInstanceRequest"},
      "output":{"shape":"DeleteTrafficPolicyInstanceResponse"},
      "errors":[
        {"shape":"NoSuchTrafficPolicyInstance"},
        {"shape":"InvalidInput"},
        {"shape":"PriorRequestNotComplete"}
      ],
      "documentation":"<p>Deletes a traffic policy instance and all of the resource record sets that Amazon Route 53 created when you created the instance.</p> <p>To delete a traffic policy instance, send a <code>DELETE</code> request to the <code>/<i>Route 53 API version</i>/trafficpolicy/<i>traffic policy instance ID</i></code> resource.</p> <important>When you delete a traffic policy instance, Amazon Route 53 also deletes all of the resource record sets that were created when you created the traffic policy instance.</important>"
    },
    "DisassociateVPCFromHostedZone":{
      "name":"DisassociateVPCFromHostedZone",
      "http":{
        "method":"POST",
        "requestUri":"/2013-04-01/hostedzone/{Id}/disassociatevpc"
      },
      "input":{
        "shape":"DisassociateVPCFromHostedZoneRequest",
        "locationName":"DisassociateVPCFromHostedZoneRequest",
        "xmlNamespace":{"uri":"https://route53.amazonaws.com/doc/2013-04-01/"}
      },
      "output":{"shape":"DisassociateVPCFromHostedZoneResponse"},
      "errors":[
        {"shape":"NoSuchHostedZone"},
        {"shape":"InvalidVPCId"},
        {"shape":"VPCAssociationNotFound"},
        {"shape":"LastVPCAssociation"},
        {"shape":"InvalidInput"}
      ],
      "documentation":"<p>This action disassociates a VPC from an hosted zone. </p> <p>To disassociate a VPC to a hosted zone, send a <code>POST</code> request to the <code>/<i>Route 53 API version</i>/hostedzone/<i>hosted zone ID</i>/disassociatevpc</code> resource. The request body must include a document with a <code>DisassociateVPCFromHostedZoneRequest</code> element. The response returns the <code>DisassociateVPCFromHostedZoneResponse</code> element that contains <code>ChangeInfo</code> for you to track the progress of the <code>DisassociateVPCFromHostedZoneRequest</code> you made. See <code>GetChange</code> operation for how to track the progress of your change.</p>"
    },
    "GetChange":{
      "name":"GetChange",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/change/{Id}"
      },
      "input":{"shape":"GetChangeRequest"},
      "output":{"shape":"GetChangeResponse"},
      "errors":[
        {"shape":"NoSuchChange"},
        {"shape":"InvalidInput"}
      ],
      "documentation":"<p>This action returns the current status of a change batch request. The status is one of the following values:</p> <p>- <code>PENDING</code> indicates that the changes in this request have not replicated to all Amazon Route 53 DNS servers. This is the initial status of all change batch requests.</p> <p>- <code>INSYNC</code> indicates that the changes have replicated to all Amazon Route 53 DNS servers. </p>"
    },
    "GetChangeDetails":{
      "name":"GetChangeDetails",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/changedetails/{Id}"
      },
      "input":{"shape":"GetChangeDetailsRequest"},
      "output":{"shape":"GetChangeDetailsResponse"},
      "errors":[
        {"shape":"NoSuchChange"},
        {"shape":"InvalidInput"}
      ],
      "documentation":"<p>This action returns the status and changes of a change batch request.</p>",
      "deprecated":true
    },
    "GetCheckerIpRanges":{
      "name":"GetCheckerIpRanges",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/checkeripranges"
      },
      "input":{"shape":"GetCheckerIpRangesRequest"},
      "output":{"shape":"GetCheckerIpRangesResponse"},
      "documentation":"<p>To retrieve a list of the IP ranges used by Amazon Route 53 health checkers to check the health of your resources, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/checkeripranges</code> resource. You can use these IP addresses to configure router and firewall rules to allow health checkers to check the health of your resources.</p>"
    },
    "GetGeoLocation":{
      "name":"GetGeoLocation",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/geolocation"
      },
      "input":{"shape":"GetGeoLocationRequest"},
      "output":{"shape":"GetGeoLocationResponse"},
      "errors":[
        {"shape":"NoSuchGeoLocation"},
        {"shape":"InvalidInput"}
      ],
      "documentation":"<p>To retrieve a single geo location, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/geolocation</code> resource with one of these options: continentcode | countrycode | countrycode and subdivisioncode.</p>"
    },
    "GetHealthCheck":{
      "name":"GetHealthCheck",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/healthcheck/{HealthCheckId}"
      },
      "input":{"shape":"GetHealthCheckRequest"},
      "output":{"shape":"GetHealthCheckResponse"},
      "errors":[
        {"shape":"NoSuchHealthCheck"},
        {"shape":"InvalidInput"},
        {"shape":"IncompatibleVersion"}
      ],
      "documentation":"<p>To retrieve the health check, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/healthcheck/<i>health check ID</i></code> resource. </p>"
    },
    "GetHealthCheckCount":{
      "name":"GetHealthCheckCount",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/healthcheckcount"
      },
      "input":{"shape":"GetHealthCheckCountRequest"},
      "output":{"shape":"GetHealthCheckCountResponse"},
      "documentation":"<p>To retrieve a count of all your health checks, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/healthcheckcount</code> resource.</p>"
    },
    "GetHealthCheckLastFailureReason":{
      "name":"GetHealthCheckLastFailureReason",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/healthcheck/{HealthCheckId}/lastfailurereason"
      },
      "input":{"shape":"GetHealthCheckLastFailureReasonRequest"},
      "output":{"shape":"GetHealthCheckLastFailureReasonResponse"},
      "errors":[
        {"shape":"NoSuchHealthCheck"},
        {"shape":"InvalidInput"}
      ],
      "documentation":"<p>If you want to learn why a health check is currently failing or why it failed most recently (if at all), you can get the failure reason for the most recent failure. Send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/healthcheck/<i>health check ID</i>/lastfailurereason</code> resource.</p>"
    },
    "GetHealthCheckStatus":{
      "name":"GetHealthCheckStatus",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/healthcheck/{HealthCheckId}/status"
      },
      "input":{"shape":"GetHealthCheckStatusRequest"},
      "output":{"shape":"GetHealthCheckStatusResponse"},
      "errors":[
        {"shape":"NoSuchHealthCheck"},
        {"shape":"InvalidInput"}
      ],
      "documentation":"<p>To retrieve the health check status, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/healthcheck/<i>health check ID</i>/status</code> resource. You can use this call to get a health check's current status. </p>"
    },
    "GetHostedZone":{
      "name":"GetHostedZone",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/hostedzone/{Id}"
      },
      "input":{"shape":"GetHostedZoneRequest"},
      "output":{"shape":"GetHostedZoneResponse"},
      "errors":[
        {"shape":"NoSuchHostedZone"},
        {"shape":"InvalidInput"}
      ],
      "documentation":"<p>To retrieve the delegation set for a hosted zone, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/hostedzone/<i>hosted zone ID</i></code> resource. The delegation set is the four Amazon Route 53 name servers that were assigned to the hosted zone when you created it.</p>"
    },
    "GetHostedZoneCount":{
      "name":"GetHostedZoneCount",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/hostedzonecount"
      },
      "input":{"shape":"GetHostedZoneCountRequest"},
      "output":{"shape":"GetHostedZoneCountResponse"},
      "errors":[
        {"shape":"InvalidInput"}
      ],
      "documentation":"<p>To retrieve a count of all your hosted zones, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/hostedzonecount</code> resource.</p>"
    },
    "GetReusableDelegationSet":{
      "name":"GetReusableDelegationSet",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/delegationset/{Id}"
      },
      "input":{"shape":"GetReusableDelegationSetRequest"},
      "output":{"shape":"GetReusableDelegationSetResponse"},
      "errors":[
        {"shape":"NoSuchDelegationSet"},
        {"shape":"DelegationSetNotReusable"},
        {"shape":"InvalidInput"}
      ],
      "documentation":"<p>To retrieve the reusable delegation set, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/delegationset/<i>delegation set ID</i></code> resource.</p>"
    },
    "GetTrafficPolicy":{
      "name":"GetTrafficPolicy",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/trafficpolicy/{Id}/{Version}"
      },
      "input":{"shape":"GetTrafficPolicyRequest"},
      "output":{"shape":"GetTrafficPolicyResponse"},
      "errors":[
        {"shape":"NoSuchTrafficPolicy"},
        {"shape":"InvalidInput"}
      ],
      "documentation":"<p>Gets information about a specific traffic policy version. To get the information, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/trafficpolicy</code> resource.</p>"
    },
    "GetTrafficPolicyInstance":{
      "name":"GetTrafficPolicyInstance",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/trafficpolicyinstance/{Id}"
      },
      "input":{"shape":"GetTrafficPolicyInstanceRequest"},
      "output":{"shape":"GetTrafficPolicyInstanceResponse"},
      "errors":[
        {"shape":"NoSuchTrafficPolicyInstance"},
        {"shape":"InvalidInput"}
      ],
      "documentation":"<p>Gets information about a specified traffic policy instance.</p> <p>To get information about the traffic policy instance, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/trafficpolicyinstance</code> resource.</p> <note>After you submit a <code>CreateTrafficPolicyInstance</code> or an <code>UpdateTrafficPolicyInstance</code> request, there's a brief delay while Amazon Route 53 creates the resource record sets that are specified in the traffic policy definition. For more information, see the <code>State</code> response element.</note>"
    },
    "GetTrafficPolicyInstanceCount":{
      "name":"GetTrafficPolicyInstanceCount",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/trafficpolicyinstancecount"
      },
      "input":{"shape":"GetTrafficPolicyInstanceCountRequest"},
      "output":{"shape":"GetTrafficPolicyInstanceCountResponse"},
      "documentation":"<p>Gets the number of traffic policy instances that are associated with the current AWS account.</p> <p>To get the number of traffic policy instances, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/trafficpolicyinstancecount</code> resource.</p>"
    },
    "ListChangeBatchesByHostedZone":{
      "name":"ListChangeBatchesByHostedZone",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/hostedzone/{Id}/changes"
      },
      "input":{"shape":"ListChangeBatchesByHostedZoneRequest"},
      "output":{"shape":"ListChangeBatchesByHostedZoneResponse"},
      "errors":[
        {"shape":"NoSuchHostedZone"},
        {"shape":"InvalidInput"}
      ],
      "documentation":"<p>This action gets the list of ChangeBatches in a given time period for a given hosted zone.</p>",
      "deprecated":true
    },
    "ListChangeBatchesByRRSet":{
      "name":"ListChangeBatchesByRRSet",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/hostedzone/{Id}/rrsChanges"
      },
      "input":{"shape":"ListChangeBatchesByRRSetRequest"},
      "output":{"shape":"ListChangeBatchesByRRSetResponse"},
      "errors":[
        {"shape":"NoSuchHostedZone"},
        {"shape":"InvalidInput"}
      ],
      "documentation":"<p>This action gets the list of ChangeBatches in a given time period for a given hosted zone and RRSet.</p>",
      "deprecated":true
    },
    "ListGeoLocations":{
      "name":"ListGeoLocations",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/geolocations"
      },
      "input":{"shape":"ListGeoLocationsRequest"},
      "output":{"shape":"ListGeoLocationsResponse"},
      "errors":[
        {"shape":"InvalidInput"}
      ],
      "documentation":"<p>To retrieve a list of supported geo locations, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/geolocations</code> resource. The response to this request includes a <code>GeoLocationDetailsList</code> element with zero, one, or multiple <code>GeoLocationDetails</code> child elements. The list is sorted by country code, and then subdivision code, followed by continents at the end of the list. </p> <p>By default, the list of geo locations is displayed on a single page. You can control the length of the page that is displayed by using the <code>MaxItems</code> parameter. If the list is truncated, <code>IsTruncated</code> will be set to <i>true</i> and a combination of <code>NextContinentCode, NextCountryCode, NextSubdivisionCode</code> will be populated. You can pass these as parameters to <code>StartContinentCode, StartCountryCode, StartSubdivisionCode</code> to control the geo location that the list begins with. </p>"
    },
    "ListHealthChecks":{
      "name":"ListHealthChecks",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/healthcheck"
      },
      "input":{"shape":"ListHealthChecksRequest"},
      "output":{"shape":"ListHealthChecksResponse"},
      "errors":[
        {"shape":"InvalidInput"},
        {"shape":"IncompatibleVersion"}
      ],
      "documentation":"<p>To retrieve a list of your health checks, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/healthcheck</code> resource. The response to this request includes a <code>HealthChecks</code> element with zero, one, or multiple <code>HealthCheck</code> child elements. By default, the list of health checks is displayed on a single page. You can control the length of the page that is displayed by using the <code>MaxItems</code> parameter. You can use the <code>Marker</code> parameter to control the health check that the list begins with. </p> <note> Amazon Route 53 returns a maximum of 100 items. If you set MaxItems to a value greater than 100, Amazon Route 53 returns only the first 100.</note>"
    },
    "ListHostedZones":{
      "name":"ListHostedZones",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/hostedzone"
      },
      "input":{"shape":"ListHostedZonesRequest"},
      "output":{"shape":"ListHostedZonesResponse"},
      "errors":[
        {"shape":"InvalidInput"},
        {"shape":"NoSuchDelegationSet"},
        {"shape":"DelegationSetNotReusable"}
      ],
      "documentation":"<p>To retrieve a list of your hosted zones, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/hostedzone</code> resource. The response to this request includes a <code>HostedZones</code> element with zero, one, or multiple <code>HostedZone</code> child elements. By default, the list of hosted zones is displayed on a single page. You can control the length of the page that is displayed by using the <code>MaxItems</code> parameter. You can use the <code>Marker</code> parameter to control the hosted zone that the list begins with. </p> <note> Amazon Route 53 returns a maximum of 100 items. If you set MaxItems to a value greater than 100, Amazon Route 53 returns only the first 100.</note>"
    },
    "ListHostedZonesByName":{
      "name":"ListHostedZonesByName",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/hostedzonesbyname"
      },
      "input":{"shape":"ListHostedZonesByNameRequest"},
      "output":{"shape":"ListHostedZonesByNameResponse"},
      "errors":[
        {"shape":"InvalidInput"},
        {"shape":"InvalidDomainName"}
      ],
      "documentation":"<p>To retrieve a list of your hosted zones in lexicographic order, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/hostedzonesbyname</code> resource. The response to this request includes a <code>HostedZones</code> element with zero or more <code>HostedZone</code> child elements lexicographically ordered by DNS name. By default, the list of hosted zones is displayed on a single page. You can control the length of the page that is displayed by using the <code>MaxItems</code> parameter. You can use the <code>DNSName</code> and <code>HostedZoneId</code> parameters to control the hosted zone that the list begins with.</p> <note> Amazon Route 53 returns a maximum of 100 items. If you set MaxItems to a value greater than 100, Amazon Route 53 returns only the first 100.</note>"
    },
    "ListResourceRecordSets":{
      "name":"ListResourceRecordSets",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/hostedzone/{Id}/rrset"
      },
      "input":{"shape":"ListResourceRecordSetsRequest"},
      "output":{"shape":"ListResourceRecordSetsResponse"},
      "errors":[
        {"shape":"NoSuchHostedZone"},
        {"shape":"InvalidInput"}
      ],
      "documentation":"<p>List the resource record sets in a specified hosted zone. Send a GET request to the <code>2013-04-01/hostedzone/<i>hosted zone ID</i>/rrset</code> resource.</p> <p><code>ListResourceRecordSets</code> returns up to 100 resource record sets at a time in ASCII order, beginning at a position specified by the name and type elements. The action sorts results first by DNS name with the labels reversed, for example:</p> <p><code>com.example.www.</code></p> <p>Note the trailing dot, which can change the sort order in some circumstances. When multiple records have the same DNS name, the action sorts results by the record type.</p> <p>You can use the name and type elements to adjust the beginning position of the list of resource record sets returned:</p> <ul> <li><b>If you do not specify <code>Name</code> or <code>Type</code></b>: The results begin with the first resource record set that the hosted zone contains.</li> <li><b>If you specify <code>Name</code> but not <code>Type</code></b>: The results begin with the first resource record set in the list whose name is greater than or equal to Name.</li> <li><b>If you specify <code>Type</code> but not <code>Name</code></b>: Amazon Route 53 returns the <code>InvalidInput</code> error.</li> <li><b>If you specify both <code>Name</code> and <code>Type</code></b>: The results begin with the first resource record set in the list whose name is greater than or equal to <code>Name</code>, and whose type is greater than or equal to <code>Type</code>.</li> </ul> <p>This action returns the most current version of the records. This includes records that are <code>PENDING</code>, and that are not yet available on all Amazon Route 53 DNS servers.</p> <p>To ensure that you get an accurate listing of the resource record sets for a hosted zone at a point in time, do not submit a <code>ChangeResourceRecordSets</code> request while you are paging through the results of a <code>ListResourceRecordSets</code> request. If you do, some pages may display results without the latest changes while other pages display results with the latest changes.</p>"
    },
    "ListReusableDelegationSets":{
      "name":"ListReusableDelegationSets",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/delegationset"
      },
      "input":{"shape":"ListReusableDelegationSetsRequest"},
      "output":{"shape":"ListReusableDelegationSetsResponse"},
      "errors":[
        {"shape":"InvalidInput"}
      ],
      "documentation":"<p>To retrieve a list of your reusable delegation sets, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/delegationset</code> resource. The response to this request includes a <code>DelegationSets</code> element with zero, one, or multiple <code>DelegationSet</code> child elements. By default, the list of delegation sets is displayed on a single page. You can control the length of the page that is displayed by using the <code>MaxItems</code> parameter. You can use the <code>Marker</code> parameter to control the delegation set that the list begins with. </p> <note> Amazon Route 53 returns a maximum of 100 items. If you set MaxItems to a value greater than 100, Amazon Route 53 returns only the first 100.</note>"
    },
    "ListTagsForResource":{
      "name":"ListTagsForResource",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/tags/{ResourceType}/{ResourceId}"
      },
      "input":{"shape":"ListTagsForResourceRequest"},
      "output":{"shape":"ListTagsForResourceResponse"},
      "errors":[
        {"shape":"InvalidInput"},
        {"shape":"NoSuchHealthCheck"},
        {"shape":"NoSuchHostedZone"},
        {"shape":"PriorRequestNotComplete"},
        {"shape":"ThrottlingException"}
      ]
    },
    "ListTagsForResources":{
      "name":"ListTagsForResources",
      "http":{
        "method":"POST",
        "requestUri":"/2013-04-01/tags/{ResourceType}"
      },
      "input":{
        "shape":"ListTagsForResourcesRequest",
        "locationName":"ListTagsForResourcesRequest",
        "xmlNamespace":{"uri":"https://route53.amazonaws.com/doc/2013-04-01/"}
      },
      "output":{"shape":"ListTagsForResourcesResponse"},
      "errors":[
        {"shape":"InvalidInput"},
        {"shape":"NoSuchHealthCheck"},
        {"shape":"NoSuchHostedZone"},
        {"shape":"PriorRequestNotComplete"},
        {"shape":"ThrottlingException"}
      ]
    },
    "ListTrafficPolicies":{
      "name":"ListTrafficPolicies",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/trafficpolicies"
      },
      "input":{"shape":"ListTrafficPoliciesRequest"},
      "output":{"shape":"ListTrafficPoliciesResponse"},
      "errors":[
        {"shape":"InvalidInput"}
      ],
      "documentation":"<p>Gets information about the latest version for every traffic policy that is associated with the current AWS account. To get the information, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/trafficpolicy</code> resource.</p> <p>Amazon Route 53 returns a maximum of 100 items in each response. If you have a lot of traffic policies, you can use the <code>maxitems</code> parameter to list them in groups of up to 100.</p> <p>The response includes three values that help you navigate from one group of <code>maxitems</code> traffic policies to the next:</p> <ul> <li><b>IsTruncated</b></li> <p>If the value of <code>IsTruncated</code> in the response is <code>true</code>, there are more traffic policies associated with the current AWS account.</p> <p>If <code>IsTruncated</code> is <code>false</code>, this response includes the last traffic policy that is associated with the current account.</p> <li><b>TrafficPolicyIdMarker</b></li> <p>If <code>IsTruncated</code> is <code>true</code>, <code>TrafficPolicyIdMarker</code> is the ID of the first traffic policy in the next group of <code>MaxItems</code> traffic policies. If you want to list more traffic policies, make another call to <code>ListTrafficPolicies</code>, and specify the value of the <code>TrafficPolicyIdMarker</code> element from the response in the <code>TrafficPolicyIdMarker</code> request parameter.</p> <p>If <code>IsTruncated</code> is <code>false</code>, the <code>TrafficPolicyIdMarker</code> element is omitted from the response.</p> <li><b>MaxItems</b></li> <p>The value that you specified for the <code>MaxItems</code> parameter in the request that produced the current response.</p> </ul>"
    },
    "ListTrafficPolicyInstances":{
      "name":"ListTrafficPolicyInstances",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/trafficpolicyinstances"
      },
      "input":{"shape":"ListTrafficPolicyInstancesRequest"},
      "output":{"shape":"ListTrafficPolicyInstancesResponse"},
      "errors":[
        {"shape":"InvalidInput"},
        {"shape":"NoSuchTrafficPolicyInstance"}
      ],
      "documentation":"<p>Gets information about the traffic policy instances that you created by using the current AWS account.</p> <note>After you submit an <code>UpdateTrafficPolicyInstance</code> request, there's a brief delay while Amazon Route 53 creates the resource record sets that are specified in the traffic policy definition. For more information, see the <code>State</code> response element.</note> <p>To get information about the traffic policy instances that are associated with the current AWS account, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/trafficpolicyinstance</code> resource.</p> <p>Amazon Route 53 returns a maximum of 100 items in each response. If you have a lot of traffic policy instances, you can use the <code>MaxItems</code> parameter to list them in groups of up to 100.</p> <p>The response includes five values that help you navigate from one group of <code>MaxItems</code> traffic policy instances to the next:</p> <ul> <li><b>IsTruncated</b></li> <p>If the value of <code>IsTruncated</code> in the response is <code>true</code>, there are more traffic policy instances associated with the current AWS account.</p> <p>If <code>IsTruncated</code> is <code>false</code>, this response includes the last traffic policy instance that is associated with the current account.</p> <li><b>MaxItems</b></li> <p>The value that you specified for the <code>MaxItems</code> parameter in the request that produced the current response.</p> <li><b>HostedZoneIdMarker</b>, <b>TrafficPolicyInstanceNameMarker</b>, and <b>TrafficPolicyInstanceTypeMarker</b></li> <p>If <code>IsTruncated</code> is <code>true</code>, these three values in the response represent the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances. To list more traffic policy instances, make another call to <code>ListTrafficPolicyInstances</code>, and specify these values in the corresponding request parameters.</p> <p>If <code>IsTruncated</code> is <code>false</code>, all three elements are omitted from the response.</p> </ul>"
    },
    "ListTrafficPolicyInstancesByHostedZone":{
      "name":"ListTrafficPolicyInstancesByHostedZone",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/trafficpolicyinstances/hostedzone"
      },
      "input":{"shape":"ListTrafficPolicyInstancesByHostedZoneRequest"},
      "output":{"shape":"ListTrafficPolicyInstancesByHostedZoneResponse"},
      "errors":[
        {"shape":"InvalidInput"},
        {"shape":"NoSuchTrafficPolicyInstance"},
        {"shape":"NoSuchHostedZone"}
      ],
      "documentation":"<p>Gets information about the traffic policy instances that you created in a specified hosted zone.</p> <note>After you submit an <code>UpdateTrafficPolicyInstance</code> request, there's a brief delay while Amazon Route 53 creates the resource record sets that are specified in the traffic policy definition. For more information, see the <code>State</code> response element.</note> <p>To get information about the traffic policy instances that you created in a specified hosted zone, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/trafficpolicyinstance</code> resource and include the ID of the hosted zone.</p> <p>Amazon Route 53 returns a maximum of 100 items in each response. If you have a lot of traffic policy instances, you can use the <code>MaxItems</code> parameter to list them in groups of up to 100.</p> <p>The response includes four values that help you navigate from one group of <code>MaxItems</code> traffic policy instances to the next:</p> <ul> <li><b>IsTruncated</b></li> <p>If the value of <code/>IsTruncated in the response is <code>true</code>, there are more traffic policy instances associated with the current AWS account.</p> <p>If <code>IsTruncated</code> is <code>false</code>, this response includes the last traffic policy instance that is associated with the current account.</p> <li><b>MaxItems</b></li> <p>The value that you specified for the <code>MaxItems</code> parameter in the request that produced the current response.</p> <li><b>TrafficPolicyInstanceNameMarker</b> and <b>TrafficPolicyInstanceTypeMarker</b></li> <p>If <code>IsTruncated</code> is <code>true</code>, these two values in the response represent the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances. To list more traffic policy instances, make another call to <code>ListTrafficPolicyInstancesByHostedZone</code>, and specify these values in the corresponding request parameters.</p> <p>If <code>IsTruncated</code> is <code>false</code>, all three elements are omitted from the response.</p> </ul>"
    },
    "ListTrafficPolicyInstancesByPolicy":{
      "name":"ListTrafficPolicyInstancesByPolicy",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/trafficpolicyinstances/trafficpolicy"
      },
      "input":{"shape":"ListTrafficPolicyInstancesByPolicyRequest"},
      "output":{"shape":"ListTrafficPolicyInstancesByPolicyResponse"},
      "errors":[
        {"shape":"InvalidInput"},
        {"shape":"NoSuchTrafficPolicyInstance"},
        {"shape":"NoSuchTrafficPolicy"}
      ],
      "documentation":"<p>Gets information about the traffic policy instances that you created by using a specify traffic policy version.</p> <note>After you submit a <code>CreateTrafficPolicyInstance</code> or an <code>UpdateTrafficPolicyInstance</code> request, there's a brief delay while Amazon Route 53 creates the resource record sets that are specified in the traffic policy definition. For more information, see the <code>State</code> response element.</note> <p>To get information about the traffic policy instances that you created by using a specify traffic policy version, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/trafficpolicyinstance</code> resource and include the ID and version of the traffic policy.</p> <p>Amazon Route 53 returns a maximum of 100 items in each response. If you have a lot of traffic policy instances, you can use the <code>MaxItems</code> parameter to list them in groups of up to 100.</p> <p>The response includes five values that help you navigate from one group of <code>MaxItems</code> traffic policy instances to the next:</p> <ul> <li><b>IsTruncated</b> <p>If the value of <code>IsTruncated</code> in the response is <code>true</code>, there are more traffic policy instances associated with the specified traffic policy.</p> <p>If <code>IsTruncated</code> is <code>false</code>, this response includes the last traffic policy instance that is associated with the specified traffic policy.</p> </li> <li><b>MaxItems</b> <p>The value that you specified for the <code>MaxItems</code> parameter in the request that produced the current response.</p> </li> <li><b>HostedZoneIdMarker</b>, <b>TrafficPolicyInstanceNameMarker</b>, and <b>TrafficPolicyInstanceTypeMarker</b> <p>If <code>IsTruncated</code> is <code>true</code>, these values in the response represent the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances. To list more traffic policy instances, make another call to <code>ListTrafficPolicyInstancesByPolicy</code>, and specify these values in the corresponding request parameters.</p> <p>If <code>IsTruncated</code> is <code>false</code>, all three elements are omitted from the response.</p> </li> </ul>"
    },
    "ListTrafficPolicyVersions":{
      "name":"ListTrafficPolicyVersions",
      "http":{
        "method":"GET",
        "requestUri":"/2013-04-01/trafficpolicies/{Id}/versions"
      },
      "input":{"shape":"ListTrafficPolicyVersionsRequest"},
      "output":{"shape":"ListTrafficPolicyVersionsResponse"},
      "errors":[
        {"shape":"InvalidInput"},
        {"shape":"NoSuchTrafficPolicy"}
      ],
      "documentation":"<p>Gets information about all of the versions for a specified traffic policy. <code>ListTrafficPolicyVersions</code> lists only versions that have not been deleted.</p> <p>Amazon Route 53 returns a maximum of 100 items in each response. If you have a lot of traffic policies, you can use the <code>maxitems</code> parameter to list them in groups of up to 100.</p> <p>The response includes three values that help you navigate from one group of <code>maxitems</code>maxitems traffic policies to the next:</p> <ul> <li><b>IsTruncated</b></li> <p>If the value of <code>IsTruncated</code> in the response is <code>true</code>, there are more traffic policy versions associated with the specified traffic policy.</p> <p>If <code>IsTruncated</code> is <code>false</code>, this response includes the last traffic policy version that is associated with the specified traffic policy.</p> <li><b>TrafficPolicyVersionMarker</b></li> <p>The ID of the next traffic policy version that is associated with the current AWS account. If you want to list more traffic policies, make another call to <code>ListTrafficPolicyVersions</code>, and specify the value of the <code>TrafficPolicyVersionMarker</code> element in the <code>TrafficPolicyVersionMarker</code> request parameter.</p> <p>If <code>IsTruncated</code> is <code>false</code>, Amazon Route 53 omits the <code>TrafficPolicyVersionMarker</code> element from the response.</p> <li><b>MaxItems</b></li> <p>The value that you specified for the <code>MaxItems</code> parameter in the request that produced the current response.</p> </ul>"
    },
    "UpdateHealthCheck":{
      "name":"UpdateHealthCheck",
      "http":{
        "method":"POST",
        "requestUri":"/2013-04-01/healthcheck/{HealthCheckId}"
      },
      "input":{
        "shape":"UpdateHealthCheckRequest",
        "locationName":"UpdateHealthCheckRequest",
        "xmlNamespace":{"uri":"https://route53.amazonaws.com/doc/2013-04-01/"}
      },
      "output":{"shape":"UpdateHealthCheckResponse"},
      "errors":[
        {"shape":"NoSuchHealthCheck"},
        {"shape":"InvalidInput"},
        {"shape":"HealthCheckVersionMismatch"}
      ],
      "documentation":"<p>This action updates an existing health check.</p> <p>To update a health check, send a <code>POST</code> request to the <code>/<i>Route 53 API version</i>/healthcheck/<i>health check ID</i></code> resource. The request body must include a document with an <code>UpdateHealthCheckRequest</code> element. The response returns an <code>UpdateHealthCheckResponse</code> element, which contains metadata about the health check.</p>"
    },
    "UpdateHostedZoneComment":{
      "name":"UpdateHostedZoneComment",
      "http":{
        "method":"POST",
        "requestUri":"/2013-04-01/hostedzone/{Id}"
      },
      "input":{
        "shape":"UpdateHostedZoneCommentRequest",
        "locationName":"UpdateHostedZoneCommentRequest",
        "xmlNamespace":{"uri":"https://route53.amazonaws.com/doc/2013-04-01/"}
      },
      "output":{"shape":"UpdateHostedZoneCommentResponse"},
      "errors":[
        {"shape":"NoSuchHostedZone"},
        {"shape":"InvalidInput"}
      ],
      "documentation":"<p>To update the hosted zone comment, send a <code>POST</code> request to the <code>/<i>Route 53 API version</i>/hostedzone/<i>hosted zone ID</i></code> resource. The request body must include a document with a <code>UpdateHostedZoneCommentRequest</code> element. The response to this request includes the modified <code>HostedZone</code> element.</p> <note> The comment can have a maximum length of 256 characters.</note>"
    },
    "UpdateTrafficPolicyComment":{
      "name":"UpdateTrafficPolicyComment",
      "http":{
        "method":"POST",
        "requestUri":"/2013-04-01/trafficpolicy/{Id}/{Version}"
      },
      "input":{
        "shape":"UpdateTrafficPolicyCommentRequest",
        "locationName":"UpdateTrafficPolicyCommentRequest",
        "xmlNamespace":{"uri":"https://route53.amazonaws.com/doc/2013-04-01/"}
      },
      "output":{"shape":"UpdateTrafficPolicyCommentResponse"},
      "errors":[
        {"shape":"InvalidInput"},
        {"shape":"NoSuchTrafficPolicy"},
        {"shape":"ConcurrentModification"}
      ],
      "documentation":"<p>Updates the comment for a specified traffic policy version.</p> <p>To update the comment, send a <code>POST</code> request to the <code>/<i>Route 53 API version</i>/trafficpolicy/</code> resource.</p> <p>The request body must include a document with an <code>UpdateTrafficPolicyCommentRequest</code> element.</p>"
    },
    "UpdateTrafficPolicyInstance":{
      "name":"UpdateTrafficPolicyInstance",
      "http":{
        "method":"POST",
        "requestUri":"/2013-04-01/trafficpolicyinstance/{Id}"
      },
      "input":{
        "shape":"UpdateTrafficPolicyInstanceRequest",
        "locationName":"UpdateTrafficPolicyInstanceRequest",
        "xmlNamespace":{"uri":"https://route53.amazonaws.com/doc/2013-04-01/"}
      },
      "output":{"shape":"UpdateTrafficPolicyInstanceResponse"},
      "errors":[
        {"shape":"InvalidInput"},
        {"shape":"NoSuchTrafficPolicy"},
        {"shape":"NoSuchTrafficPolicyInstance"},
        {"shape":"PriorRequestNotComplete"},
        {"shape":"ConflictingTypes"}
      ],
      "documentation":"<p>Updates the resource record sets in a specified hosted zone that were created based on the settings in a specified traffic policy version.</p> <important>The DNS type of the resource record sets that you're updating must match the DNS type in the JSON document that is associated with the traffic policy version that you're using to update the traffic policy instance.</important> <p>When you update a traffic policy instance, Amazon Route 53 continues to respond to DNS queries for the root resource record set name (such as example.com) while it replaces one group of resource record sets with another. Amazon Route 53 performs the following operations:</p> <ol> <li>Amazon Route 53 creates a new group of resource record sets based on the specified traffic policy. This is true regardless of how substantial the differences are between the existing resource record sets and the new resource record sets. </li> <li>When all of the new resource record sets have been created, Amazon Route 53 starts to respond to DNS queries for the root resource record set name (such as example.com) by using the new resource record sets.</li> <li>Amazon Route 53 deletes the old group of resource record sets that are associated with the root resource record set name.</li> </ol> <p>To update a traffic policy instance, send a <code>POST</code> request to the <code>/<i>Route 53 API version</i>/trafficpolicyinstance/<i>traffic policy ID</i></code> resource. The request body must include a document with an <code>UpdateTrafficPolicyInstanceRequest</code> element.</p>"
    }
  },
  "shapes":{
    "AWSAccountID":{"type":"string"},
    "AlarmIdentifier":{
      "type":"structure",
      "required":[
        "Region",
        "Name"
      ],
      "members":{
        "Region":{
          "shape":"CloudWatchRegion",
          "documentation":"<p>The <code>CloudWatchRegion</code> that the CloudWatch alarm was created in.</p>"
        },
        "Name":{
          "shape":"AlarmName",
          "documentation":"<p>The name of the CloudWatch alarm.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information to uniquely identify the CloudWatch alarm that you're associating with a Route 53 health check.</p>"
    },
    "AlarmName":{
      "type":"string",
      "max":256,
      "min":1
    },
    "AliasHealthEnabled":{"type":"boolean"},
    "AliasTarget":{
      "type":"structure",
      "required":[
        "HostedZoneId",
        "DNSName",
        "EvaluateTargetHealth"
      ],
      "members":{
        "HostedZoneId":{
          "shape":"ResourceId",
          "documentation":"<p><i>Alias resource record sets only:</i> The value you use depends on where you want to route queries:</p> <ul> <li><b>A CloudFront distribution:</b> Specify <code>Z2FDTNDATAQYW2</code>.</li> <li>An ELB load balancer: Specify the value of the hosted zone ID for the load balancer. You can get the hosted zone ID by using the AWS Management Console, the ELB API, or the AWS CLI. Use the same method to get values for <code>HostedZoneId</code> and <code>DNSName</code>. If you get one value from the console and the other value from the API or the CLI, creating the resource record set will fail.</li> <li><b>An Amazon S3 bucket that is configured as a static website:</b> Specify the hosted zone ID for the Amazon S3 website endpoint in which you created the bucket. For more information about valid values, see the table <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\">Amazon Simple Storage Service (S3) Website Endpoints</a> in the <i>Amazon Web Services General Reference</i>.</li> <li><b>Another Amazon Route 53 resource record set in your hosted zone:</b> Specify the hosted zone ID of your hosted zone. (An alias resource record set cannot reference a resource record set in a different hosted zone.)</li> </ul>"
        },
        "DNSName":{
          "shape":"DNSName",
          "documentation":"<p><i>Alias resource record sets only:</i> The external DNS name associated with the AWS Resource. The value that you specify depends on where you want to route queries:</p> <ul> <li><b>A CloudFront distribution:</b> Specify the domain name that CloudFront assigned when you created your distribution. Your CloudFront distribution must include an alternate domain name that matches the name of the resource record set. For example, if the name of the resource record set is <code>acme.example.com</code>, your CloudFront distribution must include <code>acme.example.com</code> as one of the alternate domain names. For more information, see <a href=\"http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html\">Using Alternate Domain Names (CNAMEs)</a> in the <i>Amazon CloudFront Developer Guide</i>.</li> <li><b>An ELB load balancer:</b> Specify the DNS name associated with the load balancer. You can get the DNS name by using the AWS Management Console, the ELB API, or the AWS CLI. Use the same method to get values for <code>HostedZoneId</code> and <code>DNSName</code>. If you get one value from the console and the other value from the API or the CLI, creating the resource record set will fail.</li> <li><b>An Elastic Beanstalk environment:</b> Specify the CNAME attribute for the environment. (The environment must have a regionalized domain name.) </li> <li><b>An Amazon S3 bucket that is configured as a static website:</b> Specify the domain name of the Amazon S3 website endpoint in which you created the bucket; for example, <code>s3-website-us-east-1.amazonaws.com</code>. For more information about valid values, see the table <a href=\"http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\">Amazon Simple Storage Service (S3) Website Endpoints</a> in the <i>Amazon Web Services General Reference</i>. For more information about using Amazon S3 buckets for websites, see <a href=\"http://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html\">Hosting a Static Website on Amazon S3</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</li> <li><b>Another Amazon Route 53 resource record set:</b> Specify the value of the <code>Name</code> element for a resource record set in the current hosted zone.</li> </ul>"
        },
        "EvaluateTargetHealth":{
          "shape":"AliasHealthEnabled",
          "documentation":"<p><i>Alias resource record sets only:</i> If you set the value of <code>EvaluateTargetHealth</code> to <code>true</code> for the resource record set or sets in an alias, weighted alias, latency alias, or failover alias resource record set, and if you specify a value for <code>HealthCheckId</code> for every resource record set that is referenced by these alias resource record sets, the alias resource record sets inherit the health of the referenced resource record sets.</p> <p>In this configuration, when Amazon Route 53 receives a DNS query for an alias resource record set:</p> <ol> <li>Amazon Route 53 looks at the resource record sets that are referenced by the alias resource record sets to determine which health checks they're using.</li> <li>Amazon Route 53 checks the current status of each health check. (Amazon Route 53 periodically checks the health of the endpoint that is specified in a health check; it doesn't perform the health check when the DNS query arrives.)</li> <li>Based on the status of the health checks, Amazon Route 53 determines which resource record sets are healthy. Unhealthy resource record sets are immediately removed from consideration. In addition, if all of the resource record sets that are referenced by an alias resource record set are unhealthy, that alias resource record set also is immediately removed from consideration.</li> <li>Based on the configuration of the alias resource record sets (weighted alias or latency alias, for example) and the configuration of the resource record sets that they reference, Amazon Route 53 chooses a resource record set from the healthy resource record sets, and responds to the query.</li> </ol> <p>Note the following:</p> <ul><li>You cannot set <code>EvaluateTargetHealth</code> to true when the alias target is a CloudFront distribution.</li> <li>If the AWS resource that you specify in <code>AliasTarget</code> is a resource record set or a group of resource record sets (for example, a group of weighted resource record sets), but it is not another alias resource record set, we recommend that you associate a health check with all of the resource record sets in the alias target.</li> <li>If you specify an ELB load balancer in <code>AliasTarget</code>, Elastic Load Balancing routes queries only to the healthy Amazon EC2 instances that are registered with the load balancer. If no Amazon EC2 instances are healthy or if the load balancer itself is unhealthy, and if <code>EvaluateTargetHealth</code> is <code>true</code> for the corresponding alias resource record set, Amazon Route 53 routes queries to other resources.</li> <li>When you create a load balancer, you configure settings for Elastic Load Balancing health checks; they're not Amazon Route 53 health checks, but they perform a similar function. Do not create Amazon Route 53 health checks for the Amazon EC2 instances that you register with an ELB load balancer. For more information, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-complex-configs.html\">How Health Checks Work in More Complex Amazon Route 53 Configurations</a> in the <i>Amazon Route 53 Developer Guide</i>.</li> </ul> <p>We recommend that you set <code>EvaluateTargetHealth</code> to <code>true</code> only when you have enough idle capacity to handle the failure of one or more endpoints.</p> <p>For more information and examples, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html\">Amazon Route 53 Health Checks and DNS Failover</a> in the <i>Amazon Route 53 Developer Guide</i>.</p>"
        }
      },
      "documentation":"<p><i>Alias resource record sets only:</i> Information about the CloudFront distribution, ELB load balancer, Amazon S3 bucket, or Amazon Route 53 resource record set to which you are routing traffic.</p> <p>If you're creating resource record sets for a private hosted zone, note the following:</p> <ul> <li>You can create alias resource record sets only for Amazon Route 53 resource record sets in the same private hosted zone. Creating alias resource record sets for CloudFront distributions, ELB load balancers, and Amazon S3 buckets is not supported.</li> <li>You can't create alias resource record sets for failover, geolocation, or latency resource record sets in a private hosted zone.</li> </ul>"
    },
    "AssociateVPCComment":{"type":"string"},
    "AssociateVPCWithHostedZoneRequest":{
      "type":"structure",
      "required":[
        "HostedZoneId",
        "VPC"
      ],
      "members":{
        "HostedZoneId":{
          "shape":"ResourceId",
          "documentation":"<p>The ID of the hosted zone you want to associate your VPC with.</p> <p>Note that you cannot associate a VPC with a hosted zone that doesn't have an existing VPC association.</p>",
          "location":"uri",
          "locationName":"Id"
        },
        "VPC":{
          "shape":"VPC",
          "documentation":"<p>The VPC that you want your hosted zone to be associated with. </p>"
        },
        "Comment":{
          "shape":"AssociateVPCComment",
          "documentation":"<p><i>Optional:</i> Any comments you want to include about a <code>AssociateVPCWithHostedZoneRequest</code>.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about the request to associate a VPC with an hosted zone.</p>"
    },
    "AssociateVPCWithHostedZoneResponse":{
      "type":"structure",
      "required":["ChangeInfo"],
      "members":{
        "ChangeInfo":{
          "shape":"ChangeInfo",
          "documentation":"<p>A complex type that contains the ID, the status, and the date and time of your <code>AssociateVPCWithHostedZoneRequest</code>.</p>"
        }
      },
      "documentation":"<p>A complex type containing the response information for the request.</p>"
    },
    "Change":{
      "type":"structure",
      "required":[
        "Action",
        "ResourceRecordSet"
      ],
      "members":{
        "Action":{
          "shape":"ChangeAction",
          "documentation":"<p>The action to perform:</p> <ul> <li><code>CREATE</code>: Creates a resource record set that has the specified values.</li> <li><CODE>DELETE</CODE>: Deletes a existing resource record set that has the specified values for <code>Name</code>, <code>Type</code>, <code>SetIdentifier</code> (for latency, weighted, geolocation, and failover resource record sets), and <code>TTL</code> (except alias resource record sets, for which the TTL is determined by the AWS resource that you're routing DNS queries to).</li> <li><code>UPSERT</code>: If a resource record set does not already exist, Amazon Route 53 creates it. If a resource record set does exist, Amazon Route 53 updates it with the values in the request. Amazon Route 53 can update an existing resource record set only when all of the following values match: <code>Name</code>, <code>Type</code>, and <code>SetIdentifier</code> (for weighted, latency, geolocation, and failover resource record sets).</li> </ul>"
        },
        "ResourceRecordSet":{
          "shape":"ResourceRecordSet",
          "documentation":"<p>Information about the resource record set to create or delete.</p>"
        }
      },
      "documentation":"<p>A complex type that contains the information for each change in a change batch request.</p>"
    },
    "ChangeAction":{
      "type":"string",
      "enum":[
        "CREATE",
        "DELETE",
        "UPSERT"
      ]
    },
    "ChangeBatch":{
      "type":"structure",
      "required":["Changes"],
      "members":{
        "Comment":{
          "shape":"ResourceDescription",
          "documentation":"<p><i>Optional:</i> Any comments you want to include about a change batch request.</p>"
        },
        "Changes":{
          "shape":"Changes",
          "documentation":"<p>A complex type that contains one <code>Change</code> element for each resource record set that you want to create or delete.</p>"
        }
      },
      "documentation":"<p>A complex type that contains an optional comment and the changes that you want to make with a change batch request.</p>"
    },
    "ChangeBatchRecord":{
      "type":"structure",
      "required":[
        "Id",
        "Status"
      ],
      "members":{
        "Id":{
          "shape":"ResourceId",
          "documentation":"<p>The ID of the request. Use this ID to track when the change has completed across all Amazon Route 53 DNS servers.</p>"
        },
        "SubmittedAt":{
          "shape":"TimeStamp",
          "documentation":"<p>The date and time the change was submitted, in the format <code>YYYY-MM-DDThh:mm:ssZ</code>, as specified in the ISO 8601 standard (for example, 2009-11-19T19:37:58Z). The <code>Z</code> after the time indicates that the time is listed in Coordinated Universal Time (UTC).</p>"
        },
        "Status":{
          "shape":"ChangeStatus",
          "documentation":"<p>The current state of the request. <code>PENDING</code> indicates that this request has not yet been applied to all Amazon Route 53 DNS servers.</p> <p>Valid Values: <code>PENDING</code> | <code>INSYNC</code></p>"
        },
        "Comment":{
          "shape":"ResourceDescription",
          "documentation":"<p>A complex type that describes change information about changes made to your hosted zone.</p> <p>This element contains an ID that you use when performing a <code>GetChange</code> action to get detailed information about the change.</p>"
        },
        "Submitter":{
          "shape":"AWSAccountID",
          "documentation":"<p>The AWS account ID attached to the changes. </p>"
        },
        "Changes":{
          "shape":"Changes",
          "documentation":"<p>A list of changes made in the ChangeBatch.</p>"
        }
      },
      "documentation":"<p>A complex type that lists the changes and information for a ChangeBatch.</p>",
      "deprecated":true
    },
    "ChangeBatchRecords":{
      "type":"list",
      "member":{
        "shape":"ChangeBatchRecord",
        "locationName":"ChangeBatchRecord"
      },
      "deprecated":true,
      "min":1
    },
    "ChangeInfo":{
      "type":"structure",
      "required":[
        "Id",
        "Status",
        "SubmittedAt"
      ],
      "members":{
        "Id":{
          "shape":"ResourceId",
          "documentation":"<p>The ID of the request. Use this ID to track when the change has completed across all Amazon Route 53 DNS servers.</p>"
        },
        "Status":{
          "shape":"ChangeStatus",
          "documentation":"<p>The current state of the request. <code>PENDING</code> indicates that this request has not yet been applied to all Amazon Route 53 DNS servers.</p> <p>Valid Values: <code>PENDING</code> | <code>INSYNC</code></p>"
        },
        "SubmittedAt":{
          "shape":"TimeStamp",
          "documentation":"<p>The date and time the change was submitted, in the format <code>YYYY-MM-DDThh:mm:ssZ</code>, as specified in the ISO 8601 standard (for example, 2009-11-19T19:37:58Z). The <code>Z</code> after the time indicates that the time is listed in Coordinated Universal Time (UTC).</p>"
        },
        "Comment":{
          "shape":"ResourceDescription",
          "documentation":"<p>A complex type that describes change information about changes made to your hosted zone.</p> <p>This element contains an ID that you use when performing a <code>GetChange</code> action to get detailed information about the change.</p>"
        }
      },
      "documentation":"<p>A complex type that describes change information about changes made to your hosted zone.</p> <p>This element contains an ID that you use when performing a <code>GetChange</code> action to get detailed information about the change.</p>"
    },
    "ChangeResourceRecordSetsRequest":{
      "type":"structure",
      "required":[
        "HostedZoneId",
        "ChangeBatch"
      ],
      "members":{
        "HostedZoneId":{
          "shape":"ResourceId",
          "documentation":"<p>The ID of the hosted zone that contains the resource record sets that you want to change.</p>",
          "location":"uri",
          "locationName":"Id"
        },
        "ChangeBatch":{
          "shape":"ChangeBatch",
          "documentation":"<p>A complex type that contains an optional comment and the <code>Changes</code> element.</p>"
        }
      },
      "documentation":"<p>A complex type that contains a change batch.</p>"
    },
    "ChangeResourceRecordSetsResponse":{
      "type":"structure",
      "required":["ChangeInfo"],
      "members":{
        "ChangeInfo":{
          "shape":"ChangeInfo",
          "documentation":"<p>A complex type that contains information about changes made to your hosted zone.</p> <p>This element contains an ID that you use when performing a <code>GetChange</code> action to get detailed information about the change.</p>"
        }
      },
      "documentation":"<p>A complex type containing the response for the request.</p>"
    },
    "ChangeStatus":{
      "type":"string",
      "enum":[
        "PENDING",
        "INSYNC"
      ]
    },
    "ChangeTagsForResourceRequest":{
      "type":"structure",
      "required":[
        "ResourceType",
        "ResourceId"
      ],
      "members":{
        "ResourceType":{
          "shape":"TagResourceType",
          "documentation":"<p>The type of the resource.</p> <p>- The resource type for health checks is <code>healthcheck</code>.</p> <p>- The resource type for hosted zones is <code>hostedzone</code>.</p>",
          "location":"uri",
          "locationName":"ResourceType"
        },
        "ResourceId":{
          "shape":"TagResourceId",
          "documentation":"<p>The ID of the resource for which you want to add, change, or delete tags.</p>",
          "location":"uri",
          "locationName":"ResourceId"
        },
        "AddTags":{
          "shape":"TagList",
          "documentation":"<p>A complex type that contains a list of <code>Tag</code> elements. Each <code>Tag</code> element identifies a tag that you want to add or update for the specified resource.</p>"
        },
        "RemoveTagKeys":{
          "shape":"TagKeyList",
          "documentation":"<p>A list of <code>Tag</code> keys that you want to remove from the specified resource.</p>"
        }
      },
      "documentation":"<p>A complex type containing information about a request to add, change, or delete the tags that are associated with a resource.</p>"
    },
    "ChangeTagsForResourceResponse":{
      "type":"structure",
      "members":{
      },
      "documentation":"<p>Empty response for the request.</p>"
    },
    "Changes":{
      "type":"list",
      "member":{
        "shape":"Change",
        "locationName":"Change"
      },
      "min":1
    },
    "CheckerIpRanges":{
      "type":"list",
      "member":{"shape":"IPAddressCidr"}
    },
    "ChildHealthCheckList":{
      "type":"list",
      "member":{
        "shape":"HealthCheckId",
        "locationName":"ChildHealthCheck"
      },
      "max":256
    },
    "CloudWatchAlarmConfiguration":{
      "type":"structure",
      "required":[
        "EvaluationPeriods",
        "Threshold",
        "ComparisonOperator",
        "Period",
        "MetricName",
        "Namespace",
        "Statistic"
      ],
      "members":{
        "EvaluationPeriods":{
          "shape":"EvaluationPeriods",
          "documentation":"<p>The number of periods over which data is compared to the specified threshold.</p>"
        },
        "Threshold":{
          "shape":"Threshold",
          "documentation":"<p>The value that the metric is compared with to determine the state of the alarm. For example, if you want the health check to fail if the average TCP connection time is greater than 500 milliseconds for more than 60 seconds, the threshold is 500.</p>"
        },
        "ComparisonOperator":{
          "shape":"ComparisonOperator",
          "documentation":"<p>The arithmetic operation to use when comparing the specified Statistic and Threshold.</p> <p>Valid Values are <code>GreaterThanOrEqualToThreshold</code>, <code>GreaterThanThreshold</code>, <code>LessThanThreshold</code> and <code>LessThanOrEqualToThreshold</code></p>"
        },
        "Period":{
          "shape":"Period",
          "documentation":"<p>An integer that represents the period in seconds over which the statistic is applied.</p>"
        },
        "MetricName":{
          "shape":"MetricName",
          "documentation":"<p>The name of the CloudWatch metric that is associated with the CloudWatch alarm.</p>"
        },
        "Namespace":{
          "shape":"Namespace",
          "documentation":"<p>The namespace of the CloudWatch metric that is associated with the CloudWatch alarm.</p>"
        },
        "Statistic":{
          "shape":"Statistic",
          "documentation":"<p>The statistic to apply to the CloudWatch metric that is associated with the CloudWatch alarm.</p> <p>Valid Values are <code>SampleCount</code>, <code>Average</code>, <code>Sum</code>, <code>Minimum</code> and <code>Maximum</code></p>"
        },
        "Dimensions":{
          "shape":"DimensionList",
          "documentation":"<p>A list of <code>Dimension</code> elements for the CloudWatch metric that is associated with the CloudWatch alarm. For information about the metrics and dimensions that CloudWatch supports, see <a href=\"http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html\">Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference</a>.</p>"
        }
      },
      "documentation":"<p>For CLOUDWATCH_METRIC health checks, a complex type that contains information about the CloudWatch alarm that you're associating with the health check.</p>"
    },
    "CloudWatchRegion":{
      "type":"string",
      "enum":[
        "us-east-1",
        "us-west-1",
        "us-west-2",
        "eu-central-1",
        "eu-west-1",
        "ap-southeast-1",
        "ap-southeast-2",
        "ap-northeast-1",
        "ap-northeast-2",
        "sa-east-1"
      ],
      "max":64,
      "min":1
    },
    "ComparisonOperator":{
      "type":"string",
      "enum":[
        "GreaterThanOrEqualToThreshold",
        "GreaterThanThreshold",
        "LessThanThreshold",
        "LessThanOrEqualToThreshold"
      ]
    },
    "ConcurrentModification":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>Another user submitted a request to update the object at the same time that you did. Retry the request. </p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "ConflictingDomainExists":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "exception":true
    },
    "ConflictingTypes":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>You tried to update a traffic policy instance by using a traffic policy version that has a different DNS type than the current type for the instance. You specified the type in the JSON document in the <code>CreateTrafficPolicy</code> or <code>CreateTrafficPolicyVersion</code>request. </p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "CreateHealthCheckRequest":{
      "type":"structure",
      "required":[
        "CallerReference",
        "HealthCheckConfig"
      ],
      "members":{
        "CallerReference":{
          "shape":"HealthCheckNonce",
          "documentation":"<p>A unique string that identifies the request and that allows failed <code>CreateHealthCheck</code> requests to be retried without the risk of executing the operation twice. You must use a unique <code>CallerReference</code> string every time you create a health check. <code>CallerReference</code> can be any unique string; you might choose to use a string that identifies your project.</p> <p>Valid characters are any Unicode code points that are legal in an XML 1.0 document. The UTF-8 encoding of the value must be less than 128 bytes.</p>"
        },
        "HealthCheckConfig":{
          "shape":"HealthCheckConfig",
          "documentation":"<p>A complex type that contains health check configuration.</p>"
        }
      },
      "documentation":"<p>>A complex type that contains information about the request to create a health check.</p>"
    },
    "CreateHealthCheckResponse":{
      "type":"structure",
      "required":[
        "HealthCheck",
        "Location"
      ],
      "members":{
        "HealthCheck":{
          "shape":"HealthCheck",
          "documentation":"<p>A complex type that contains identifying information about the health check.</p>"
        },
        "Location":{
          "shape":"ResourceURI",
          "documentation":"<p>The unique URL representing the new health check.</p>",
          "location":"header",
          "locationName":"Location"
        }
      },
      "documentation":"<p>A complex type containing the response information for the new health check.</p>"
    },
    "CreateHostedZoneRequest":{
      "type":"structure",
      "required":[
        "Name",
        "CallerReference"
      ],
      "members":{
        "Name":{
          "shape":"DNSName",
          "documentation":"<p>The name of the domain. This must be a fully-specified domain, for example, www.example.com. The trailing dot is optional; Amazon Route 53 assumes that the domain name is fully qualified. This means that Amazon Route 53 treats www.example.com (without a trailing dot) and www.example.com. (with a trailing dot) as identical.</p> <p>This is the name you have registered with your DNS registrar. You should ask your registrar to change the authoritative name servers for your domain to the set of <code>NameServers</code> elements returned in <code>DelegationSet</code>.</p>"
        },
        "VPC":{
          "shape":"VPC",
          "documentation":"<p>The VPC that you want your hosted zone to be associated with. By providing this parameter, your newly created hosted cannot be resolved anywhere other than the given VPC.</p>"
        },
        "CallerReference":{
          "shape":"Nonce",
          "documentation":"<p>A unique string that identifies the request and that allows failed <code>CreateHostedZone</code> requests to be retried without the risk of executing the operation twice. You must use a unique <code>CallerReference</code> string every time you create a hosted zone. <code>CallerReference</code> can be any unique string; you might choose to use a string that identifies your project, such as <code>DNSMigration_01</code>.</p> <p>Valid characters are any Unicode code points that are legal in an XML 1.0 document. The UTF-8 encoding of the value must be less than 128 bytes.</p>"
        },
        "HostedZoneConfig":{
          "shape":"HostedZoneConfig",
          "documentation":"<p>A complex type that contains an optional comment about your hosted zone.</p>"
        },
        "DelegationSetId":{
          "shape":"ResourceId",
          "documentation":"<p>The delegation set id of the reusable delgation set whose NS records you want to assign to the new hosted zone.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about the request to create a hosted zone.</p>"
    },
    "CreateHostedZoneResponse":{
      "type":"structure",
      "required":[
        "HostedZone",
        "ChangeInfo",
        "DelegationSet",
        "Location"
      ],
      "members":{
        "HostedZone":{
          "shape":"HostedZone",
          "documentation":"<p>A complex type that contains identifying information about the hosted zone.</p>"
        },
        "ChangeInfo":{
          "shape":"ChangeInfo",
          "documentation":"<p>A complex type that contains information about the request to create a hosted zone. This includes an ID that you use when you call the <code>GetChange</code> action to get the current status of the change request.</p>"
        },
        "DelegationSet":{
          "shape":"DelegationSet",
          "documentation":"<p>A complex type that contains name server information.</p>"
        },
        "VPC":{"shape":"VPC"},
        "Location":{
          "shape":"ResourceURI",
          "documentation":"<p>The unique URL representing the new hosted zone.</p>",
          "location":"header",
          "locationName":"Location"
        }
      },
      "documentation":"<p>A complex type containing the response information for the new hosted zone.</p>"
    },
    "CreateReusableDelegationSetRequest":{
      "type":"structure",
      "required":["CallerReference"],
      "members":{
        "CallerReference":{
          "shape":"Nonce",
          "documentation":"<p>A unique string that identifies the request and that allows failed <code>CreateReusableDelegationSet</code> requests to be retried without the risk of executing the operation twice. You must use a unique <code>CallerReference</code> string every time you create a reusable delegation set. <code>CallerReference</code> can be any unique string; you might choose to use a string that identifies your project, such as <code>DNSMigration_01</code>.</p> <p>Valid characters are any Unicode code points that are legal in an XML 1.0 document. The UTF-8 encoding of the value must be less than 128 bytes.</p>"
        },
        "HostedZoneId":{
          "shape":"ResourceId",
          "documentation":"<p>The ID of the hosted zone whose delegation set you want to mark as reusable. It is an optional parameter.</p>"
        }
      }
    },
    "CreateReusableDelegationSetResponse":{
      "type":"structure",
      "required":[
        "DelegationSet",
        "Location"
      ],
      "members":{
        "DelegationSet":{
          "shape":"DelegationSet",
          "documentation":"<p>A complex type that contains name server information.</p>"
        },
        "Location":{
          "shape":"ResourceURI",
          "documentation":"<p>The unique URL representing the new reusbale delegation set.</p>",
          "location":"header",
          "locationName":"Location"
        }
      }
    },
    "CreateTrafficPolicyInstanceRequest":{
      "type":"structure",
      "required":[
        "HostedZoneId",
        "Name",
        "TTL",
        "TrafficPolicyId",
        "TrafficPolicyVersion"
      ],
      "members":{
        "HostedZoneId":{
          "shape":"ResourceId",
          "documentation":"<p>The ID of the hosted zone in which you want Amazon Route 53 to create resource record sets by using the configuration in a traffic policy.</p>"
        },
        "Name":{
          "shape":"DNSName",
          "documentation":"<p>The domain name (such as example.com) or subdomain name (such as www.example.com) for which Amazon Route 53 responds to DNS queries by using the resource record sets that Amazon Route 53 creates for this traffic policy instance.</p>"
        },
        "TTL":{
          "shape":"TTL",
          "documentation":"<p>The TTL that you want Amazon Route 53 to assign to all of the resource record sets that it creates in the specified hosted zone.</p>"
        },
        "TrafficPolicyId":{
          "shape":"TrafficPolicyId",
          "documentation":"<p>The ID of the traffic policy that you want to use to create resource record sets in the specified hosted zone.</p>"
        },
        "TrafficPolicyVersion":{
          "shape":"TrafficPolicyVersion",
          "documentation":"<p>The version of the traffic policy that you want to use to create resource record sets in the specified hosted zone.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about the resource record sets that you want to create based on a specified traffic policy.</p>"
    },
    "CreateTrafficPolicyInstanceResponse":{
      "type":"structure",
      "required":[
        "TrafficPolicyInstance",
        "Location"
      ],
      "members":{
        "TrafficPolicyInstance":{
          "shape":"TrafficPolicyInstance",
          "documentation":"<p>A complex type that contains settings for the new traffic policy instance.</p>"
        },
        "Location":{
          "shape":"ResourceURI",
          "documentation":"<p>A unique URL that represents a new traffic policy instance.</p>",
          "location":"header",
          "locationName":"Location"
        }
      },
      "documentation":"<p>A complex type that contains the response information for the <code>CreateTrafficPolicyInstance</code> request.</p>"
    },
    "CreateTrafficPolicyRequest":{
      "type":"structure",
      "required":[
        "Name",
        "Document"
      ],
      "members":{
        "Name":{
          "shape":"TrafficPolicyName",
          "documentation":"<p>The name of the traffic policy.</p>"
        },
        "Document":{
          "shape":"TrafficPolicyDocument",
          "documentation":"<p>The definition of this traffic policy in JSON format. For more information, see <a href=\"http://docs.aws.amazon.com/Route53/latest/APIReference/api-policies-traffic-policy-document-format.html\">Traffic Policy Document Format</a> in the <i>Amazon Route 53 API Reference</i>.</p>"
        },
        "Comment":{
          "shape":"TrafficPolicyComment",
          "documentation":"<p>Any comments that you want to include about the traffic policy.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about the traffic policy that you want to create.</p>"
    },
    "CreateTrafficPolicyResponse":{
      "type":"structure",
      "required":[
        "TrafficPolicy",
        "Location"
      ],
      "members":{
        "TrafficPolicy":{
          "shape":"TrafficPolicy",
          "documentation":"<p>A complex type that contains settings for the new traffic policy.</p>"
        },
        "Location":{
          "shape":"ResourceURI",
          "location":"header",
          "locationName":"Location"
        }
      },
      "documentation":"<p>A complex type that contains the response information for the <code>CreateTrafficPolicy</code> request.</p>"
    },
    "CreateTrafficPolicyVersionRequest":{
      "type":"structure",
      "required":[
        "Id",
        "Document"
      ],
      "members":{
        "Id":{
          "shape":"TrafficPolicyId",
          "documentation":"<p>The ID of the traffic policy for which you want to create a new version.</p>",
          "location":"uri",
          "locationName":"Id"
        },
        "Document":{
          "shape":"TrafficPolicyDocument",
          "documentation":"<p>The definition of a new traffic policy version, in JSON format. You must specify the full definition of the new traffic policy. You cannot specify just the differences between the new version and a previous version. For more information, see <a href=\"http://docs.aws.amazon.com/Route53/latest/APIReference/api-policies-traffic-policy-document-format.html\">Traffic Policy Document Format</a> in the <i>Amazon Route 53 API Reference</i>.</p>"
        },
        "Comment":{
          "shape":"TrafficPolicyComment",
          "documentation":"<p>Any comments that you want to include about the new traffic policy version.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about the traffic policy for which you want to create a new version.</p>"
    },
    "CreateTrafficPolicyVersionResponse":{
      "type":"structure",
      "required":[
        "TrafficPolicy",
        "Location"
      ],
      "members":{
        "TrafficPolicy":{
          "shape":"TrafficPolicy",
          "documentation":"<p>A complex type that contains settings for the new version of the traffic policy.</p>"
        },
        "Location":{
          "shape":"ResourceURI",
          "location":"header",
          "locationName":"Location"
        }
      },
      "documentation":"<p>A complex type that contains the response information for the <code>CreateTrafficPolicyVersion</code> request.</p>"
    },
    "DNSName":{
      "type":"string",
      "max":1024
    },
    "Date":{
      "type":"string",
      "deprecated":true,
      "max":256
    },
    "DelegationSet":{
      "type":"structure",
      "required":["NameServers"],
      "members":{
        "Id":{"shape":"ResourceId"},
        "CallerReference":{"shape":"Nonce"},
        "NameServers":{
          "shape":"DelegationSetNameServers",
          "documentation":"<p>A complex type that contains the authoritative name servers for the hosted zone. Use the method provided by your domain registrar to add an NS record to your domain for each <code>NameServer</code> that is assigned to your hosted zone.</p>"
        }
      },
      "documentation":"<p>A complex type that contains name server information.</p>"
    },
    "DelegationSetAlreadyCreated":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>A delegation set with the same owner and caller reference combination has already been created.</p>",
      "exception":true
    },
    "DelegationSetAlreadyReusable":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>The specified delegation set has already been marked as reusable.</p>",
      "exception":true
    },
    "DelegationSetInUse":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>The specified delegation contains associated hosted zones which must be deleted before the reusable delegation set can be deleted.</p>",
      "exception":true
    },
    "DelegationSetNameServers":{
      "type":"list",
      "member":{
        "shape":"DNSName",
        "locationName":"NameServer"
      },
      "min":1
    },
    "DelegationSetNotAvailable":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>Amazon Route 53 allows some duplicate domain names, but there is a maximum number of duplicate names. This error indicates that you have reached that maximum. If you want to create another hosted zone with the same name and Amazon Route 53 generates this error, you can request an increase to the limit on the <a href=\"http://aws.amazon.com/route53-request/\">Contact Us</a> page.</p>",
      "exception":true
    },
    "DelegationSetNotReusable":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>The specified delegation set has not been marked as reusable.</p>",
      "exception":true
    },
    "DelegationSets":{
      "type":"list",
      "member":{
        "shape":"DelegationSet",
        "locationName":"DelegationSet"
      }
    },
    "DeleteHealthCheckRequest":{
      "type":"structure",
      "required":["HealthCheckId"],
      "members":{
        "HealthCheckId":{
          "shape":"HealthCheckId",
          "documentation":"<p>The ID of the health check to delete.</p>",
          "location":"uri",
          "locationName":"HealthCheckId"
        }
      },
      "documentation":"<p>A complex type containing the request information for delete health check.</p>"
    },
    "DeleteHealthCheckResponse":{
      "type":"structure",
      "members":{
      },
      "documentation":"<p>Empty response for the request.</p>"
    },
    "DeleteHostedZoneRequest":{
      "type":"structure",
      "required":["Id"],
      "members":{
        "Id":{
          "shape":"ResourceId",
          "documentation":"<p>The ID of the hosted zone you want to delete.</p>",
          "location":"uri",
          "locationName":"Id"
        }
      },
      "documentation":"<p>A complex type that contains information about the hosted zone that you want to delete.</p>"
    },
    "DeleteHostedZoneResponse":{
      "type":"structure",
      "required":["ChangeInfo"],
      "members":{
        "ChangeInfo":{
          "shape":"ChangeInfo",
          "documentation":"<p>A complex type that contains the ID, the status, and the date and time of your delete request.</p>"
        }
      },
      "documentation":"<p>A complex type containing the response information for the request.</p>"
    },
    "DeleteReusableDelegationSetRequest":{
      "type":"structure",
      "required":["Id"],
      "members":{
        "Id":{
          "shape":"ResourceId",
          "documentation":"<p>The ID of the reusable delegation set you want to delete.</p>",
          "location":"uri",
          "locationName":"Id"
        }
      },
      "documentation":"<p>A complex type containing the information for the delete request.</p>"
    },
    "DeleteReusableDelegationSetResponse":{
      "type":"structure",
      "members":{
      },
      "documentation":"<p>Empty response for the request.</p>"
    },
    "DeleteTrafficPolicyInstanceRequest":{
      "type":"structure",
      "required":["Id"],
      "members":{
        "Id":{
          "shape":"TrafficPolicyInstanceId",
          "documentation":"<p>The ID of the traffic policy instance that you want to delete. </p> <important>When you delete a traffic policy instance, Amazon Route 53 also deletes all of the resource record sets that were created when you created the traffic policy instance.</important>",
          "location":"uri",
          "locationName":"Id"
        }
      },
      "documentation":"<p>A complex type that contains information about the traffic policy instance that you want to delete.</p>"
    },
    "DeleteTrafficPolicyInstanceResponse":{
      "type":"structure",
      "members":{
      },
      "documentation":"<p>An empty element.</p>"
    },
    "DeleteTrafficPolicyRequest":{
      "type":"structure",
      "required":[
        "Id",
        "Version"
      ],
      "members":{
        "Id":{
          "shape":"TrafficPolicyId",
          "documentation":"<p>The ID of the traffic policy that you want to delete.</p>",
          "location":"uri",
          "locationName":"Id"
        },
        "Version":{
          "shape":"TrafficPolicyVersion",
          "documentation":"<p>The version number of the traffic policy that you want to delete.</p>",
          "location":"uri",
          "locationName":"Version"
        }
      },
      "documentation":"<p>A request to delete a specified traffic policy version.</p>"
    },
    "DeleteTrafficPolicyResponse":{
      "type":"structure",
      "members":{
      },
      "documentation":"<p>An empty element.</p>"
    },
    "Dimension":{
      "type":"structure",
      "required":[
        "Name",
        "Value"
      ],
      "members":{
        "Name":{
          "shape":"DimensionField",
          "documentation":"<p>The name of the dimension.</p>"
        },
        "Value":{
          "shape":"DimensionField",
          "documentation":"<p>The value of the dimension.</p>"
        }
      },
      "documentation":"<p>The name and value of a dimension for a CloudWatch metric.</p>"
    },
    "DimensionField":{
      "type":"string",
      "max":255,
      "min":1
    },
    "DimensionList":{
      "type":"list",
      "member":{
        "shape":"Dimension",
        "locationName":"Dimension"
      },
      "max":10
    },
    "DisassociateVPCComment":{"type":"string"},
    "DisassociateVPCFromHostedZoneRequest":{
      "type":"structure",
      "required":[
        "HostedZoneId",
        "VPC"
      ],
      "members":{
        "HostedZoneId":{
          "shape":"ResourceId",
          "documentation":"<p>The ID of the hosted zone you want to disassociate your VPC from.</p> <p>Note that you cannot disassociate the last VPC from a hosted zone.</p>",
          "location":"uri",
          "locationName":"Id"
        },
        "VPC":{
          "shape":"VPC",
          "documentation":"<p>The VPC that you want your hosted zone to be disassociated from. </p>"
        },
        "Comment":{
          "shape":"DisassociateVPCComment",
          "documentation":"<p><i>Optional:</i> Any comments you want to include about a <code>DisassociateVPCFromHostedZoneRequest</code>.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about the request to disassociate a VPC from an hosted zone.</p>"
    },
    "DisassociateVPCFromHostedZoneResponse":{
      "type":"structure",
      "required":["ChangeInfo"],
      "members":{
        "ChangeInfo":{
          "shape":"ChangeInfo",
          "documentation":"<p>A complex type that contains the ID, the status, and the date and time of your <code>DisassociateVPCFromHostedZoneRequest</code>.</p>"
        }
      },
      "documentation":"<p>A complex type containing the response information for the request.</p>"
    },
    "EnableSNI":{"type":"boolean"},
    "ErrorMessage":{"type":"string"},
    "ErrorMessages":{
      "type":"list",
      "member":{
        "shape":"ErrorMessage",
        "locationName":"Message"
      }
    },
    "EvaluationPeriods":{
      "type":"integer",
      "min":1
    },
    "FailureThreshold":{
      "type":"integer",
      "max":10,
      "min":1
    },
    "FullyQualifiedDomainName":{
      "type":"string",
      "max":255
    },
    "GeoLocation":{
      "type":"structure",
      "members":{
        "ContinentCode":{
          "shape":"GeoLocationContinentCode",
          "documentation":"<p>The code for a continent geo location. Note: only continent locations have a continent code.</p> <p>Valid values: <code>AF</code> | <code>AN</code> | <code>AS</code> | <code>EU</code> | <code>OC</code> | <code>NA</code> | <code>SA</code></p> <p>Constraint: Specifying <code>ContinentCode</code> with either <code>CountryCode</code> or <code>SubdivisionCode</code> returns an <code>InvalidInput</code> error.</p>"
        },
        "CountryCode":{
          "shape":"GeoLocationCountryCode",
          "documentation":"<p>The code for a country geo location. The default location uses '*' for the country code and will match all locations that are not matched by a geo location.</p> <p>The default geo location uses a <code>*</code> for the country code. All other country codes follow the ISO 3166 two-character code.</p>"
        },
        "SubdivisionCode":{
          "shape":"GeoLocationSubdivisionCode",
          "documentation":"<p>The code for a country's subdivision (e.g., a province of Canada). A subdivision code is only valid with the appropriate country code.</p> <p>Constraint: Specifying <code>SubdivisionCode</code> without <code>CountryCode</code> returns an <code>InvalidInput</code> error.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about a geo location.</p>"
    },
    "GeoLocationContinentCode":{
      "type":"string",
      "max":2,
      "min":2
    },
    "GeoLocationContinentName":{
      "type":"string",
      "max":32,
      "min":1
    },
    "GeoLocationCountryCode":{
      "type":"string",
      "max":2,
      "min":1
    },
    "GeoLocationCountryName":{
      "type":"string",
      "max":64,
      "min":1
    },
    "GeoLocationDetails":{
      "type":"structure",
      "members":{
        "ContinentCode":{
          "shape":"GeoLocationContinentCode",
          "documentation":"<p>The code for a continent geo location. Note: only continent locations have a continent code.</p>"
        },
        "ContinentName":{
          "shape":"GeoLocationContinentName",
          "documentation":"<p>The name of the continent. This element is only present if <code>ContinentCode</code> is also present.</p>"
        },
        "CountryCode":{
          "shape":"GeoLocationCountryCode",
          "documentation":"<p>The code for a country geo location. The default location uses '*' for the country code and will match all locations that are not matched by a geo location.</p> <p>The default geo location uses a <code>*</code> for the country code. All other country codes follow the ISO 3166 two-character code.</p>"
        },
        "CountryName":{
          "shape":"GeoLocationCountryName",
          "documentation":"<p>The name of the country. This element is only present if <code>CountryCode</code> is also present.</p>"
        },
        "SubdivisionCode":{
          "shape":"GeoLocationSubdivisionCode",
          "documentation":"<p>The code for a country's subdivision (e.g., a province of Canada). A subdivision code is only valid with the appropriate country code.</p>"
        },
        "SubdivisionName":{
          "shape":"GeoLocationSubdivisionName",
          "documentation":"<p>The name of the subdivision. This element is only present if <code>SubdivisionCode</code> is also present.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about a <code>GeoLocation</code>.</p>"
    },
    "GeoLocationDetailsList":{
      "type":"list",
      "member":{
        "shape":"GeoLocationDetails",
        "locationName":"GeoLocationDetails"
      }
    },
    "GeoLocationSubdivisionCode":{
      "type":"string",
      "max":3,
      "min":1
    },
    "GeoLocationSubdivisionName":{
      "type":"string",
      "max":64,
      "min":1
    },
    "GetChangeDetailsRequest":{
      "type":"structure",
      "required":["Id"],
      "members":{
        "Id":{
          "shape":"ResourceId",
          "documentation":"<p>The ID of the change batch request. The value that you specify here is the value that <code>ChangeResourceRecordSets</code> returned in the Id element when you submitted the request.</p>",
          "location":"uri",
          "locationName":"Id"
        }
      },
      "documentation":"<p>The input for a GetChangeDetails request.</p>",
      "deprecated":true
    },
    "GetChangeDetailsResponse":{
      "type":"structure",
      "required":["ChangeBatchRecord"],
      "members":{
        "ChangeBatchRecord":{
          "shape":"ChangeBatchRecord",
          "documentation":"<p>A complex type that contains information about the specified change batch, including the change batch ID, the status of the change, and the contained changes.</p>"
        }
      },
      "documentation":"<p>A complex type that contains the <code>ChangeBatchRecord</code> element.</p>",
      "deprecated":true
    },
    "GetChangeRequest":{
      "type":"structure",
      "required":["Id"],
      "members":{
        "Id":{
          "shape":"ResourceId",
          "documentation":"<p>The ID of the change batch request. The value that you specify here is the value that <code>ChangeResourceRecordSets</code> returned in the Id element when you submitted the request.</p>",
          "location":"uri",
          "locationName":"Id"
        }
      },
      "documentation":"<p>The input for a GetChange request.</p>"
    },
    "GetChangeResponse":{
      "type":"structure",
      "required":["ChangeInfo"],
      "members":{
        "ChangeInfo":{
          "shape":"ChangeInfo",
          "documentation":"<p>A complex type that contains information about the specified change batch, including the change batch ID, the status of the change, and the date and time of the request.</p>"
        }
      },
      "documentation":"<p>A complex type that contains the <code>ChangeInfo</code> element.</p>"
    },
    "GetCheckerIpRangesRequest":{
      "type":"structure",
      "members":{
      },
      "documentation":"<p>Empty request.</p>"
    },
    "GetCheckerIpRangesResponse":{
      "type":"structure",
      "required":["CheckerIpRanges"],
      "members":{
        "CheckerIpRanges":{
          "shape":"CheckerIpRanges",
          "documentation":"<p>A complex type that contains sorted list of IP ranges in CIDR format for Amazon Route 53 health checkers.</p>"
        }
      },
      "documentation":"<p>A complex type that contains the <code>CheckerIpRanges</code> element.</p>"
    },
    "GetGeoLocationRequest":{
      "type":"structure",
      "members":{
        "ContinentCode":{
          "shape":"GeoLocationContinentCode",
          "documentation":"<p>The code for a continent geo location. Note: only continent locations have a continent code.</p> <p>Valid values: <code>AF</code> | <code>AN</code> | <code>AS</code> | <code>EU</code> | <code>OC</code> | <code>NA</code> | <code>SA</code></p> <p>Constraint: Specifying <code>ContinentCode</code> with either <code>CountryCode</code> or <code>SubdivisionCode</code> returns an <code>InvalidInput</code> error.</p>",
          "location":"querystring",
          "locationName":"continentcode"
        },
        "CountryCode":{
          "shape":"GeoLocationCountryCode",
          "documentation":"<p>The code for a country geo location. The default location uses '*' for the country code and will match all locations that are not matched by a geo location.</p> <p>The default geo location uses a <code>*</code> for the country code. All other country codes follow the ISO 3166 two-character code.</p>",
          "location":"querystring",
          "locationName":"countrycode"
        },
        "SubdivisionCode":{
          "shape":"GeoLocationSubdivisionCode",
          "documentation":"<p>The code for a country's subdivision (e.g., a province of Canada). A subdivision code is only valid with the appropriate country code.</p> <p>Constraint: Specifying <code>SubdivisionCode</code> without <code>CountryCode</code> returns an <code>InvalidInput</code> error.</p>",
          "location":"querystring",
          "locationName":"subdivisioncode"
        }
      },
      "documentation":"<p>A complex type that contains information about the request to get a geo location.</p>"
    },
    "GetGeoLocationResponse":{
      "type":"structure",
      "required":["GeoLocationDetails"],
      "members":{
        "GeoLocationDetails":{
          "shape":"GeoLocationDetails",
          "documentation":"<p>A complex type that contains the information about the specified geo location.</p>"
        }
      },
      "documentation":"<p>A complex type containing information about the specified geo location.</p>"
    },
    "GetHealthCheckCountRequest":{
      "type":"structure",
      "members":{
      },
      "documentation":"<p>To retrieve a count of all your health checks, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/healthcheckcount</code> resource.</p>"
    },
    "GetHealthCheckCountResponse":{
      "type":"structure",
      "required":["HealthCheckCount"],
      "members":{
        "HealthCheckCount":{
          "shape":"HealthCheckCount",
          "documentation":"<p>The number of health checks associated with the current AWS account.</p>"
        }
      },
      "documentation":"<p>A complex type that contains the count of health checks associated with the current AWS account.</p>"
    },
    "GetHealthCheckLastFailureReasonRequest":{
      "type":"structure",
      "required":["HealthCheckId"],
      "members":{
        "HealthCheckId":{
          "shape":"HealthCheckId",
          "documentation":"<p>The ID of the health check for which you want to retrieve the reason for the most recent failure.</p>",
          "location":"uri",
          "locationName":"HealthCheckId"
        }
      },
      "documentation":"<p>A complex type that contains information about the request to get the most recent failure reason for a health check.</p>"
    },
    "GetHealthCheckLastFailureReasonResponse":{
      "type":"structure",
      "required":["HealthCheckObservations"],
      "members":{
        "HealthCheckObservations":{
          "shape":"HealthCheckObservations",
          "documentation":"<p>A list that contains one <code>HealthCheckObservation</code> element for each Amazon Route 53 health checker.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about the most recent failure for the specified health check.</p>"
    },
    "GetHealthCheckRequest":{
      "type":"structure",
      "required":["HealthCheckId"],
      "members":{
        "HealthCheckId":{
          "shape":"HealthCheckId",
          "documentation":"<p>The ID of the health check to retrieve.</p>",
          "location":"uri",
          "locationName":"HealthCheckId"
        }
      },
      "documentation":"<p>A complex type that contains information about the request to get a health check.</p>"
    },
    "GetHealthCheckResponse":{
      "type":"structure",
      "required":["HealthCheck"],
      "members":{
        "HealthCheck":{
          "shape":"HealthCheck",
          "documentation":"<p>A complex type that contains the information about the specified health check.</p>"
        }
      },
      "documentation":"<p>A complex type containing information about the specified health check.</p>"
    },
    "GetHealthCheckStatusRequest":{
      "type":"structure",
      "required":["HealthCheckId"],
      "members":{
        "HealthCheckId":{
          "shape":"HealthCheckId",
          "documentation":"<p>If you want Amazon Route 53 to return this resource record set in response to a DNS query only when a health check is passing, include the <code>HealthCheckId</code> element and specify the ID of the applicable health check.</p> <p>Amazon Route 53 determines whether a resource record set is healthy by periodically sending a request to the endpoint that is specified in the health check. If that endpoint returns an HTTP status code of 2xx or 3xx, the endpoint is healthy. If the endpoint returns an HTTP status code of 400 or greater, or if the endpoint doesn't respond for a certain amount of time, Amazon Route 53 considers the endpoint unhealthy and also considers the resource record set unhealthy.</p> <p>The <code>HealthCheckId</code> element is only useful when Amazon Route 53 is choosing between two or more resource record sets to respond to a DNS query, and you want Amazon Route 53 to base the choice in part on the status of a health check. Configuring health checks only makes sense in the following configurations:</p> <ul> <li>You're checking the health of the resource record sets in a weighted, latency, geolocation, or failover resource record set, and you specify health check IDs for all of the resource record sets. If the health check for one resource record set specifies an endpoint that is not healthy, Amazon Route 53 stops responding to queries using the value for that resource record set.</li> <li><p>You set <code>EvaluateTargetHealth</code> to <code>true</code> for the resource record sets in an alias, weighted alias, latency alias, geolocation alias, or failover alias resource record set, and you specify health check IDs for all of the resource record sets that are referenced by the alias resource record sets. For more information about this configuration, see <code>EvaluateTargetHealth</code>.</p> <p>Amazon Route 53 doesn't check the health of the endpoint specified in the resource record set, for example, the endpoint specified by the IP address in the <code>Value</code> element. When you add a <code>HealthCheckId</code> element to a resource record set, Amazon Route 53 checks the health of the endpoint that you specified in the health check.</p> </li> </ul> <p>For geolocation resource record sets, if an endpoint is unhealthy, Amazon Route 53 looks for a resource record set for the larger, associated geographic region. For example, suppose you have resource record sets for a state in the United States, for the United States, for North America, and for all locations. If the endpoint for the state resource record set is unhealthy, Amazon Route 53 checks the resource record sets for the United States, for North America, and for all locations (a resource record set for which the value of CountryCode is <code>*</code>), in that order, until it finds a resource record set for which the endpoint is healthy.</p> <p>If your health checks specify the endpoint only by domain name, we recommend that you create a separate health check for each endpoint. For example, create a health check for each HTTP server that is serving content for www.example.com. For the value of <code>FullyQualifiedDomainName</code>, specify the domain name of the server (such as <code>us-east-1-www.example.com</code>), not the name of the resource record sets (example.com).</p> <important>In this configuration, if you create a health check for which the value of <code>FullyQualifiedDomainName</code> matches the name of the resource record sets and then associate the health check with those resource record sets, health check results will be unpredictable.</important>",
          "location":"uri",
          "locationName":"HealthCheckId"
        }
      },
      "documentation":"<p>A complex type that contains information about the request to get health check status for a health check.</p>"
    },
    "GetHealthCheckStatusResponse":{
      "type":"structure",
      "required":["HealthCheckObservations"],
      "members":{
        "HealthCheckObservations":{
          "shape":"HealthCheckObservations",
          "documentation":"<p>A list that contains one <code>HealthCheckObservation</code> element for each Amazon Route 53 health checker.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about the status of the specified health check.</p>"
    },
    "GetHostedZoneCountRequest":{
      "type":"structure",
      "members":{
      },
      "documentation":"<p>To retrieve a count of all your hosted zones, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/hostedzonecount</code> resource.</p>"
    },
    "GetHostedZoneCountResponse":{
      "type":"structure",
      "required":["HostedZoneCount"],
      "members":{
        "HostedZoneCount":{
          "shape":"HostedZoneCount",
          "documentation":"<p>The number of hosted zones associated with the current AWS account.</p>"
        }
      },
      "documentation":"<p>A complex type that contains the count of hosted zones associated with the current AWS account.</p>"
    },
    "GetHostedZoneRequest":{
      "type":"structure",
      "required":["Id"],
      "members":{
        "Id":{
          "shape":"ResourceId",
          "documentation":"<p>The ID of the hosted zone for which you want to get a list of the name servers in the delegation set.</p>",
          "location":"uri",
          "locationName":"Id"
        }
      },
      "documentation":"<p>The input for a GetHostedZone request.</p>"
    },
    "GetHostedZoneResponse":{
      "type":"structure",
      "required":["HostedZone"],
      "members":{
        "HostedZone":{
          "shape":"HostedZone",
          "documentation":"<p>A complex type that contains the information about the specified hosted zone.</p>"
        },
        "DelegationSet":{
          "shape":"DelegationSet",
          "documentation":"<p>A complex type that contains information about the name servers for the specified hosted zone.</p>"
        },
        "VPCs":{
          "shape":"VPCs",
          "documentation":"<p>A complex type that contains information about VPCs associated with the specified hosted zone.</p>"
        }
      },
      "documentation":"<p>A complex type containing information about the specified hosted zone.</p>"
    },
    "GetReusableDelegationSetRequest":{
      "type":"structure",
      "required":["Id"],
      "members":{
        "Id":{
          "shape":"ResourceId",
          "documentation":"<p>The ID of the reusable delegation set for which you want to get a list of the name server.</p>",
          "location":"uri",
          "locationName":"Id"
        }
      },
      "documentation":"<p>The input for a <code>GetReusableDelegationSet</code> request.</p>"
    },
    "GetReusableDelegationSetResponse":{
      "type":"structure",
      "required":["DelegationSet"],
      "members":{
        "DelegationSet":{
          "shape":"DelegationSet",
          "documentation":"<p>A complex type that contains the information about the nameservers for the specified delegation set ID.</p>"
        }
      },
      "documentation":"<p>A complex type containing information about the specified reusable delegation set.</p>"
    },
    "GetTrafficPolicyInstanceCountRequest":{
      "type":"structure",
      "members":{
      },
      "documentation":"<p>To retrieve a count of all your traffic policy instances, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/trafficpolicyinstancecount</code> resource.</p>"
    },
    "GetTrafficPolicyInstanceCountResponse":{
      "type":"structure",
      "required":["TrafficPolicyInstanceCount"],
      "members":{
        "TrafficPolicyInstanceCount":{
          "shape":"TrafficPolicyInstanceCount",
          "documentation":"<p>The number of traffic policy instances that are associated with the current AWS account.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about the number of traffic policy instances that are associated with the current AWS account.</p>"
    },
    "GetTrafficPolicyInstanceRequest":{
      "type":"structure",
      "required":["Id"],
      "members":{
        "Id":{
          "shape":"TrafficPolicyInstanceId",
          "documentation":"<p>The ID of the traffic policy instance that you want to get information about.</p>",
          "location":"uri",
          "locationName":"Id"
        }
      },
      "documentation":"<p>Gets information about a specified traffic policy instance.</p> <p>To get information about a traffic policy instance, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/trafficpolicyinstance/<i>Id</i></code> resource.</p>"
    },
    "GetTrafficPolicyInstanceResponse":{
      "type":"structure",
      "required":["TrafficPolicyInstance"],
      "members":{
        "TrafficPolicyInstance":{
          "shape":"TrafficPolicyInstance",
          "documentation":"<p>A complex type that contains settings for the traffic policy instance.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about the resource record sets that Amazon Route 53 created based on a specified traffic policy.</p>"
    },
    "GetTrafficPolicyRequest":{
      "type":"structure",
      "required":[
        "Id",
        "Version"
      ],
      "members":{
        "Id":{
          "shape":"TrafficPolicyId",
          "documentation":"<p>The ID of the traffic policy that you want to get information about.</p>",
          "location":"uri",
          "locationName":"Id"
        },
        "Version":{
          "shape":"TrafficPolicyVersion",
          "documentation":"<p>The version number of the traffic policy that you want to get information about.</p>",
          "location":"uri",
          "locationName":"Version"
        }
      },
      "documentation":"<p>Gets information about a specific traffic policy version. To get the information, send a GET request to the /<i>Route 53 API version</i>/trafficpolicy resource, and specify the ID and the version of the traffic policy.</p>"
    },
    "GetTrafficPolicyResponse":{
      "type":"structure",
      "required":["TrafficPolicy"],
      "members":{
        "TrafficPolicy":{
          "shape":"TrafficPolicy",
          "documentation":"<p>A complex type that contains settings for the specified traffic policy.</p>"
        }
      },
      "documentation":"<p>A complex type that contains the response information for the request.</p>"
    },
    "HealthCheck":{
      "type":"structure",
      "required":[
        "Id",
        "CallerReference",
        "HealthCheckConfig",
        "HealthCheckVersion"
      ],
      "members":{
        "Id":{
          "shape":"HealthCheckId",
          "documentation":"<p>The ID of the specified health check.</p>"
        },
        "CallerReference":{
          "shape":"HealthCheckNonce",
          "documentation":"<p>A unique string that identifies the request to create the health check.</p>"
        },
        "HealthCheckConfig":{
          "shape":"HealthCheckConfig",
          "documentation":"<p>A complex type that contains the health check configuration.</p>"
        },
        "HealthCheckVersion":{
          "shape":"HealthCheckVersion",
          "documentation":"<p>The version of the health check. You can optionally pass this value in a call to <code>UpdateHealthCheck</code> to prevent overwriting another change to the health check.</p>"
        },
        "CloudWatchAlarmConfiguration":{
          "shape":"CloudWatchAlarmConfiguration",
          "documentation":"<p>For CLOUDWATCH_METRIC health checks, a complex type that contains information about the CloudWatch alarm that you're associating with the health check.</p>"
        }
      },
      "documentation":"<p>A complex type that contains identifying information about the health check.</p>"
    },
    "HealthCheckAlreadyExists":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>The health check you are trying to create already exists. Amazon Route 53 returns this error when a health check has already been created with the specified <code>CallerReference</code>.</p>",
      "error":{"httpStatusCode":409},
      "exception":true
    },
    "HealthCheckConfig":{
      "type":"structure",
      "required":["Type"],
      "members":{
        "IPAddress":{
          "shape":"IPAddress",
          "documentation":"<p>IP Address of the instance being checked. </p>"
        },
        "Port":{
          "shape":"Port",
          "documentation":"<p>Port on which connection will be opened to the instance to health check. For HTTP and HTTP_STR_MATCH this defaults to 80 if the port is not specified. For HTTPS and HTTPS_STR_MATCH this defaults to 443 if the port is not specified.</p>"
        },
        "Type":{
          "shape":"HealthCheckType",
          "documentation":"<p>The type of health check to be performed. Currently supported types are TCP, HTTP, HTTPS, HTTP_STR_MATCH, HTTPS_STR_MATCH, CALCULATED and CLOUDWATCH_METRIC.</p>"
        },
        "ResourcePath":{
          "shape":"ResourcePath",
          "documentation":"<p>Path to ping on the instance to check the health. Required for HTTP, HTTPS, HTTP_STR_MATCH, and HTTPS_STR_MATCH health checks. The HTTP request is issued to the instance on the given port and path.</p>"
        },
        "FullyQualifiedDomainName":{
          "shape":"FullyQualifiedDomainName",
          "documentation":"<p>Fully qualified domain name of the instance to be health checked.</p>"
        },
        "SearchString":{
          "shape":"SearchString",
          "documentation":"<p>A string to search for in the body of a health check response. Required for HTTP_STR_MATCH and HTTPS_STR_MATCH health checks. Amazon Route 53 considers case when searching for <code>SearchString</code> in the response body. </p>"
        },
        "RequestInterval":{
          "shape":"RequestInterval",
          "documentation":"<p>The number of seconds between the time that Amazon Route 53 gets a response from your endpoint and the time that it sends the next health-check request.</p> <p>Each Amazon Route 53 health checker makes requests at this interval. Valid values are 10 and 30. The default value is 30.</p>"
        },
        "FailureThreshold":{
          "shape":"FailureThreshold",
          "documentation":"<p>The number of consecutive health checks that an endpoint must pass or fail for Amazon Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa.</p> <p>Valid values are integers between 1 and 10. For more information, see \"How Amazon Route 53 Determines Whether an Endpoint Is Healthy\" in the Amazon Route 53 Developer Guide.</p>"
        },
        "MeasureLatency":{
          "shape":"MeasureLatency",
          "documentation":"<p>A Boolean value that indicates whether you want Amazon Route 53 to measure the latency between health checkers in multiple AWS regions and your endpoint and to display CloudWatch latency graphs in the Amazon Route 53 console.</p>"
        },
        "Inverted":{
          "shape":"Inverted",
          "documentation":"<p>A boolean value that indicates whether the status of health check should be inverted. For example, if a health check is healthy but <code>Inverted</code> is <code>True</code>, then Amazon Route 53 considers the health check to be unhealthy.</p>"
        },
        "HealthThreshold":{
          "shape":"HealthThreshold",
          "documentation":"<p>The minimum number of child health checks that must be healthy for Amazon Route 53 to consider the parent health check to be healthy. Valid values are integers between 0 and 256, inclusive.</p>"
        },
        "ChildHealthChecks":{
          "shape":"ChildHealthCheckList",
          "documentation":"<p>For a specified parent health check, a list of <code>HealthCheckId</code> values for the associated child health checks.</p>"
        },
        "EnableSNI":{
          "shape":"EnableSNI",
          "documentation":"<p>Specify whether you want Amazon Route 53 to send the value of <code>FullyQualifiedDomainName</code> to the endpoint in the <code>client_hello</code> message during TLS negotiation. If you don't specify a value for <code>EnableSNI</code>, Amazon Route 53 defaults to <code>true</code> when <code>Type</code> is <code>HTTPS</code> or <code>HTTPS_STR_MATCH</code> and defaults to <code>false</code> when <code>Type</code> is any other value.</p>"
        },
        "Regions":{
          "shape":"HealthCheckRegionList",
          "documentation":"<p>A list of <code>HealthCheckRegion</code> values that you want Amazon Route 53 to use to perform health checks for the specified endpoint. You must specify at least three regions.</p>"
        },
        "AlarmIdentifier":{
          "shape":"AlarmIdentifier",
          "documentation":"<p>A complex type that contains information to uniquely identify the CloudWatch alarm that you're associating with a Route 53 health check.</p>"
        },
        "InsufficientDataHealthStatus":{
          "shape":"InsufficientDataHealthStatus",
          "documentation":"<p>The status of the health check when CloudWatch has insufficient data about the state of associated alarm. Valid values are <code>Healthy</code>, <code>Unhealthy</code> and <code>LastKnownStatus</code>.</p>"
        }
      },
      "documentation":"<p>A complex type that contains the health check configuration.</p>"
    },
    "HealthCheckCount":{"type":"long"},
    "HealthCheckId":{
      "type":"string",
      "max":64
    },
    "HealthCheckInUse":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>There are resource records associated with this health check. Before you can delete the health check, you must disassociate it from the resource record sets.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "HealthCheckNonce":{
      "type":"string",
      "max":64,
      "min":1
    },
    "HealthCheckObservation":{
      "type":"structure",
      "members":{
        "Region":{
          "shape":"HealthCheckRegion",
          "documentation":"<p>The <code>HealthCheckRegion</code> of the Amazon Route 53 health checker that performed this health check.</p>"
        },
        "IPAddress":{
          "shape":"IPAddress",
          "documentation":"<p>The IP address of the Amazon Route 53 health checker that performed this health check.</p>"
        },
        "StatusReport":{
          "shape":"StatusReport",
          "documentation":"<p>A complex type that contains information about the health check status for the current observation.</p>"
        }
      },
      "documentation":"<p>A complex type that contains the IP address of a Amazon Route 53 health checker and the reason for the health check status.</p>"
    },
    "HealthCheckObservations":{
      "type":"list",
      "member":{
        "shape":"HealthCheckObservation",
        "locationName":"HealthCheckObservation"
      }
    },
    "HealthCheckRegion":{
      "type":"string",
      "documentation":"<p>An Amazon EC2 region that you want Amazon Route 53 to use to perform health checks.</p>",
      "enum":[
        "us-east-1",
        "us-west-1",
        "us-west-2",
        "eu-west-1",
        "ap-southeast-1",
        "ap-southeast-2",
        "ap-northeast-1",
        "sa-east-1"
      ],
      "max":64,
      "min":1
    },
    "HealthCheckRegionList":{
      "type":"list",
      "member":{
        "shape":"HealthCheckRegion",
        "locationName":"Region"
      },
      "max":64,
      "min":1
    },
    "HealthCheckType":{
      "type":"string",
      "enum":[
        "HTTP",
        "HTTPS",
        "HTTP_STR_MATCH",
        "HTTPS_STR_MATCH",
        "TCP",
        "CALCULATED",
        "CLOUDWATCH_METRIC"
      ]
    },
    "HealthCheckVersion":{
      "type":"long",
      "min":1
    },
    "HealthCheckVersionMismatch":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":409},
      "exception":true
    },
    "HealthChecks":{
      "type":"list",
      "member":{
        "shape":"HealthCheck",
        "locationName":"HealthCheck"
      }
    },
    "HealthThreshold":{
      "type":"integer",
      "max":256,
      "min":0
    },
    "HostedZone":{
      "type":"structure",
      "required":[
        "Id",
        "Name",
        "CallerReference"
      ],
      "members":{
        "Id":{
          "shape":"ResourceId",
          "documentation":"<p>The ID of the specified hosted zone.</p>"
        },
        "Name":{
          "shape":"DNSName",
          "documentation":"<p>The name of the domain. This must be a fully-specified domain, for example, www.example.com. The trailing dot is optional; Amazon Route 53 assumes that the domain name is fully qualified. This means that Amazon Route 53 treats www.example.com (without a trailing dot) and www.example.com. (with a trailing dot) as identical.</p> <p>This is the name you have registered with your DNS registrar. You should ask your registrar to change the authoritative name servers for your domain to the set of <code>NameServers</code> elements returned in <code>DelegationSet</code>.</p>"
        },
        "CallerReference":{
          "shape":"Nonce",
          "documentation":"<p>A unique string that identifies the request to create the hosted zone.</p>"
        },
        "Config":{
          "shape":"HostedZoneConfig",
          "documentation":"<p>A complex type that contains the <code>Comment</code> element.</p>"
        },
        "ResourceRecordSetCount":{
          "shape":"HostedZoneRRSetCount",
          "documentation":"<p>Total number of resource record sets in the hosted zone.</p>"
        }
      },
      "documentation":"<p>A complex type that contain information about the specified hosted zone.</p>"
    },
    "HostedZoneAlreadyExists":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>The hosted zone you are trying to create already exists. Amazon Route 53 returns this error when a hosted zone has already been created with the specified <code>CallerReference</code>.</p>",
      "error":{"httpStatusCode":409},
      "exception":true
    },
    "HostedZoneConfig":{
      "type":"structure",
      "members":{
        "Comment":{
          "shape":"ResourceDescription",
          "documentation":"<p>An optional comment about your hosted zone. If you don't want to specify a comment, you can omit the <code>HostedZoneConfig</code> and <code>Comment</code> elements from the XML document.</p>"
        },
        "PrivateZone":{
          "shape":"IsPrivateZone",
          "documentation":"<p><code>GetHostedZone</code> and <code>ListHostedZone</code> responses: A Boolean value that indicates whether a hosted zone is private.</p> <p><code>CreateHostedZone</code> requests: When you're creating a private hosted zone (when you specify values for VPCId and VPCRegion), you can optionally specify true for PrivateZone. </p>"
        }
      },
      "documentation":"<p>A complex type that contains an optional comment about your hosted zone. If you don't want to specify a comment, you can omit the <code>HostedZoneConfig</code> and <code>Comment</code> elements from the XML document.</p>"
    },
    "HostedZoneCount":{"type":"long"},
    "HostedZoneNotEmpty":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>The hosted zone contains resource record sets in addition to the default NS and SOA resource record sets. Before you can delete the hosted zone, you must delete the additional resource record sets.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "HostedZoneNotFound":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>The specified HostedZone cannot be found.</p>",
      "exception":true
    },
    "HostedZoneRRSetCount":{"type":"long"},
    "HostedZones":{
      "type":"list",
      "member":{
        "shape":"HostedZone",
        "locationName":"HostedZone"
      }
    },
    "IPAddress":{
      "type":"string",
      "max":15,
      "pattern":"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$"
    },
    "IPAddressCidr":{"type":"string"},
    "IncompatibleVersion":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>The resource you are trying to access is unsupported on this Amazon Route 53 endpoint. Please consider using a newer endpoint or a tool that does so.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "InsufficientDataHealthStatus":{
      "type":"string",
      "enum":[
        "Healthy",
        "Unhealthy",
        "LastKnownStatus"
      ]
    },
    "InvalidArgument":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>At least one of the specified arguments is invalid.</p>",
      "exception":true
    },
    "InvalidChangeBatch":{
      "type":"structure",
      "members":{
        "messages":{
          "shape":"ErrorMessages",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>This error contains a list of one or more error messages. Each error message indicates one error in the change batch.</p>",
      "exception":true
    },
    "InvalidDomainName":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>This error indicates that the specified domain name is not valid.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "InvalidInput":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>Some value specified in the request is invalid or the XML document is malformed.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "InvalidTrafficPolicyDocument":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>The format of the traffic policy document that you specified in the <code>Document</code> element is invalid.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "InvalidVPCId":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>The hosted zone you are trying to create for your VPC_ID does not belong to you. Amazon Route 53 returns this error when the VPC specified by <code>VPCId</code> does not belong to you.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "Inverted":{"type":"boolean"},
    "IsPrivateZone":{"type":"boolean"},
    "LastVPCAssociation":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>The VPC you are trying to disassociate from the hosted zone is the last the VPC that is associated with the hosted zone. Amazon Route 53 currently doesn't support disassociate the last VPC from the hosted zone.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "LimitsExceeded":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>The limits specified for a resource have been exceeded.</p>",
      "exception":true
    },
    "ListChangeBatchesByHostedZoneRequest":{
      "type":"structure",
      "required":[
        "HostedZoneId",
        "StartDate",
        "EndDate"
      ],
      "members":{
        "HostedZoneId":{
          "shape":"ResourceId",
          "documentation":"<p>The ID of the hosted zone that you want to see changes for.</p>",
          "location":"uri",
          "locationName":"Id"
        },
        "StartDate":{
          "shape":"Date",
          "documentation":"<p>The start of the time period you want to see changes for.</p>",
          "location":"querystring",
          "locationName":"startDate"
        },
        "EndDate":{
          "shape":"Date",
          "documentation":"<p>The end of the time period you want to see changes for.</p>",
          "location":"querystring",
          "locationName":"endDate"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The maximum number of items on a page.</p>",
          "location":"querystring",
          "locationName":"maxItems"
        },
        "Marker":{
          "shape":"PageMarker",
          "documentation":"<p>The page marker.</p>",
          "location":"querystring",
          "locationName":"marker"
        }
      },
      "documentation":"<p>The input for a ListChangeBatchesByHostedZone request.</p>",
      "deprecated":true
    },
    "ListChangeBatchesByHostedZoneResponse":{
      "type":"structure",
      "required":[
        "MaxItems",
        "Marker",
        "ChangeBatchRecords"
      ],
      "members":{
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The maximum number of items on a page.</p>"
        },
        "Marker":{
          "shape":"PageMarker",
          "documentation":"<p>The page marker.</p>"
        },
        "IsTruncated":{
          "shape":"PageTruncated",
          "documentation":"<p>A flag that indicates if there are more change batches to list.</p>"
        },
        "ChangeBatchRecords":{
          "shape":"ChangeBatchRecords",
          "documentation":"<p>The change batches within the given hosted zone and time period. </p>"
        },
        "NextMarker":{
          "shape":"PageMarker",
          "documentation":"<p>The next page marker.</p>"
        }
      },
      "documentation":"<p>The input for a ListChangeBatchesByHostedZone request.</p>",
      "deprecated":true
    },
    "ListChangeBatchesByRRSetRequest":{
      "type":"structure",
      "required":[
        "HostedZoneId",
        "Name",
        "Type",
        "StartDate",
        "EndDate"
      ],
      "members":{
        "HostedZoneId":{
          "shape":"ResourceId",
          "documentation":"<p>The ID of the hosted zone that you want to see changes for.</p>",
          "location":"uri",
          "locationName":"Id"
        },
        "Name":{
          "shape":"DNSName",
          "documentation":"<p>The name of the RRSet that you want to see changes for.</p>",
          "location":"querystring",
          "locationName":"rrSet_name"
        },
        "Type":{
          "shape":"RRType",
          "documentation":"<p>The type of the RRSet that you want to see changes for.</p>",
          "location":"querystring",
          "locationName":"type"
        },
        "SetIdentifier":{
          "shape":"ResourceRecordSetIdentifier",
          "documentation":"<p>The identifier of the RRSet that you want to see changes for.</p>",
          "location":"querystring",
          "locationName":"identifier"
        },
        "StartDate":{
          "shape":"Date",
          "documentation":"<p>The start of the time period you want to see changes for.</p>",
          "location":"querystring",
          "locationName":"startDate"
        },
        "EndDate":{
          "shape":"Date",
          "documentation":"<p>The end of the time period you want to see changes for.</p>",
          "location":"querystring",
          "locationName":"endDate"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The maximum number of items on a page.</p>",
          "location":"querystring",
          "locationName":"maxItems"
        },
        "Marker":{
          "shape":"PageMarker",
          "documentation":"<p>The page marker.</p>",
          "location":"querystring",
          "locationName":"marker"
        }
      },
      "documentation":"<p>The input for a ListChangeBatchesByRRSet request.</p>",
      "deprecated":true
    },
    "ListChangeBatchesByRRSetResponse":{
      "type":"structure",
      "required":[
        "MaxItems",
        "Marker",
        "ChangeBatchRecords"
      ],
      "members":{
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The maximum number of items on a page.</p>"
        },
        "Marker":{
          "shape":"PageMarker",
          "documentation":"<p>The page marker.</p>"
        },
        "IsTruncated":{
          "shape":"PageTruncated",
          "documentation":"<p>A flag that indicates if there are more change batches to list.</p>"
        },
        "ChangeBatchRecords":{
          "shape":"ChangeBatchRecords",
          "documentation":"<p>The change batches within the given hosted zone and time period. </p>"
        },
        "NextMarker":{
          "shape":"PageMarker",
          "documentation":"<p>The next page marker.</p>"
        }
      },
      "documentation":"<p>The input for a ListChangeBatchesByRRSet request.</p>",
      "deprecated":true
    },
    "ListGeoLocationsRequest":{
      "type":"structure",
      "members":{
        "StartContinentCode":{
          "shape":"GeoLocationContinentCode",
          "documentation":"<p>The first continent code in the lexicographic ordering of geo locations that you want the <code>ListGeoLocations</code> request to list. For non-continent geo locations, this should be null.</p> <p>Valid values: <code>AF</code> | <code>AN</code> | <code>AS</code> | <code>EU</code> | <code>OC</code> | <code>NA</code> | <code>SA</code></p> <p>Constraint: Specifying <code>ContinentCode</code> with either <code>CountryCode</code> or <code>SubdivisionCode</code> returns an <code>InvalidInput</code> error.</p>",
          "location":"querystring",
          "locationName":"startcontinentcode"
        },
        "StartCountryCode":{
          "shape":"GeoLocationCountryCode",
          "documentation":"<p>The first country code in the lexicographic ordering of geo locations that you want the <code>ListGeoLocations</code> request to list.</p> <p>The default geo location uses a <code>*</code> for the country code. All other country codes follow the ISO 3166 two-character code.</p>",
          "location":"querystring",
          "locationName":"startcountrycode"
        },
        "StartSubdivisionCode":{
          "shape":"GeoLocationSubdivisionCode",
          "documentation":"<p>The first subdivision code in the lexicographic ordering of geo locations that you want the <code>ListGeoLocations</code> request to list.</p> <p>Constraint: Specifying <code>SubdivisionCode</code> without <code>CountryCode</code> returns an <code>InvalidInput</code> error.</p>",
          "location":"querystring",
          "locationName":"startsubdivisioncode"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The maximum number of geo locations you want in the response body.</p>",
          "location":"querystring",
          "locationName":"maxitems"
        }
      },
      "documentation":"<p>The input for a <code>ListGeoLocations</code> request.</p>"
    },
    "ListGeoLocationsResponse":{
      "type":"structure",
      "required":[
        "GeoLocationDetailsList",
        "IsTruncated",
        "MaxItems"
      ],
      "members":{
        "GeoLocationDetailsList":{
          "shape":"GeoLocationDetailsList",
          "documentation":"<p>A complex type that contains information about the geo locations that are returned by the request.</p>"
        },
        "IsTruncated":{
          "shape":"PageTruncated",
          "documentation":"<p>A flag that indicates whether there are more geo locations to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the values included in the <code>NextContinentCode</code>, <code>NextCountryCode</code>, and <code>NextSubdivisionCode</code> elements.</p> <p>Valid Values: <code>true</code> | <code>false</code></p>"
        },
        "NextContinentCode":{
          "shape":"GeoLocationContinentCode",
          "documentation":"<p>If the results were truncated, the continent code of the next geo location in the list. This element is present only if <code>IsTruncated</code> is true and the next geo location to list is a continent location. </p>"
        },
        "NextCountryCode":{
          "shape":"GeoLocationCountryCode",
          "documentation":"<p>If the results were truncated, the country code of the next geo location in the list. This element is present only if <code>IsTruncated</code> is true and the next geo location to list is not a continent location. </p>"
        },
        "NextSubdivisionCode":{
          "shape":"GeoLocationSubdivisionCode",
          "documentation":"<p>If the results were truncated, the subdivision code of the next geo location in the list. This element is present only if <code>IsTruncated</code> is true and the next geo location has a subdivision. </p>"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The maximum number of records you requested. The maximum value of <code>MaxItems</code> is 100.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about the geo locations that are returned by the request and information about the response.</p>"
    },
    "ListHealthChecksRequest":{
      "type":"structure",
      "members":{
        "Marker":{
          "shape":"PageMarker",
          "documentation":"<p>If the request returned more than one page of results, submit another request and specify the value of <code>NextMarker</code> from the last response in the <code>marker</code> parameter to get the next page of results.</p>",
          "location":"querystring",
          "locationName":"marker"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>Specify the maximum number of health checks to return per page of results.</p>",
          "location":"querystring",
          "locationName":"maxitems"
        }
      },
      "documentation":"<p>To retrieve a list of your health checks, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/healthcheck</code> resource. The response to this request includes a <code>HealthChecks</code> element with zero or more <code>HealthCheck</code> child elements. By default, the list of health checks is displayed on a single page. You can control the length of the page that is displayed by using the <code>MaxItems</code> parameter. You can use the <code>Marker</code> parameter to control the health check that the list begins with.</p> <note> Amazon Route 53 returns a maximum of 100 items. If you set <code>MaxItems</code> to a value greater than 100, Amazon Route 53 returns only the first 100.</note>"
    },
    "ListHealthChecksResponse":{
      "type":"structure",
      "required":[
        "HealthChecks",
        "Marker",
        "IsTruncated",
        "MaxItems"
      ],
      "members":{
        "HealthChecks":{
          "shape":"HealthChecks",
          "documentation":"<p>A complex type that contains information about the health checks associated with the current AWS account.</p>"
        },
        "Marker":{
          "shape":"PageMarker",
          "documentation":"<p>If the request returned more than one page of results, submit another request and specify the value of <code>NextMarker</code> from the last response in the <code>marker</code> parameter to get the next page of results.</p>"
        },
        "IsTruncated":{
          "shape":"PageTruncated",
          "documentation":"<p>A flag indicating whether there are more health checks to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the <code>Marker</code> element.</p> <p>Valid Values: <code>true</code> | <code>false</code></p>"
        },
        "NextMarker":{
          "shape":"PageMarker",
          "documentation":"<p>Indicates where to continue listing health checks. If <code>IsTruncated</code> is <code>true</code>, make another request to <code>ListHealthChecks</code> and include the value of the <code>NextMarker</code> element in the <code>Marker</code> element to get the next page of results.</p>"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The maximum number of health checks to be included in the response body. If the number of health checks associated with this AWS account exceeds <code>MaxItems</code>, the value of <code>IsTruncated</code> in the response is <code>true</code>. Call <code>ListHealthChecks</code> again and specify the value of <code>NextMarker</code> from the last response in the <code>Marker</code> element of the next request to get the next page of results.</p>"
        }
      },
      "documentation":"<p>A complex type that contains the response for the request.</p>"
    },
    "ListHostedZonesByNameRequest":{
      "type":"structure",
      "members":{
        "DNSName":{
          "shape":"DNSName",
          "documentation":"<p>The first name in the lexicographic ordering of domain names that you want the <code>ListHostedZonesByNameRequest</code> request to list.</p> <p>If the request returned more than one page of results, submit another request and specify the value of <code>NextDNSName</code> and <code>NextHostedZoneId</code> from the last response in the <code>DNSName</code> and <code>HostedZoneId</code> parameters to get the next page of results.</p>",
          "location":"querystring",
          "locationName":"dnsname"
        },
        "HostedZoneId":{
          "shape":"ResourceId",
          "documentation":"<p>If the request returned more than one page of results, submit another request and specify the value of <code>NextDNSName</code> and <code>NextHostedZoneId</code> from the last response in the <code>DNSName</code> and <code>HostedZoneId</code> parameters to get the next page of results.</p>",
          "location":"querystring",
          "locationName":"hostedzoneid"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>Specify the maximum number of hosted zones to return per page of results.</p>",
          "location":"querystring",
          "locationName":"maxitems"
        }
      },
      "documentation":"<p>To retrieve a list of your hosted zones in lexicographic order, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/hostedzonesbyname</code> resource. The response to this request includes a <code>HostedZones</code> element with zero or more <code>HostedZone</code> child elements lexicographically ordered by DNS name. By default, the list of hosted zones is displayed on a single page. You can control the length of the page that is displayed by using the <code>MaxItems</code> parameter. You can use the <code>DNSName</code> and <code>HostedZoneId</code> parameters to control the hosted zone that the list begins with.</p>"
    },
    "ListHostedZonesByNameResponse":{
      "type":"structure",
      "required":[
        "HostedZones",
        "IsTruncated",
        "MaxItems"
      ],
      "members":{
        "HostedZones":{
          "shape":"HostedZones",
          "documentation":"<p>A complex type that contains information about the hosted zones associated with the current AWS account.</p>"
        },
        "DNSName":{
          "shape":"DNSName",
          "documentation":"<p>The <code>DNSName</code> value sent in the request.</p>"
        },
        "HostedZoneId":{
          "shape":"ResourceId",
          "documentation":"<p>The <code>HostedZoneId</code> value sent in the request.</p>"
        },
        "IsTruncated":{
          "shape":"PageTruncated",
          "documentation":"<p>A flag indicating whether there are more hosted zones to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the <code>NextDNSName</code> and <code>NextHostedZoneId</code> elements.</p> <p>Valid Values: <code>true</code> | <code>false</code></p>"
        },
        "NextDNSName":{
          "shape":"DNSName",
          "documentation":"<p>If the value of <code>IsTruncated</code> in the <code>ListHostedZonesByNameResponse</code> is <code>true</code>, there are more hosted zones associated with the current AWS account. To get the next page of results, make another request to <code>ListHostedZonesByName</code>. Specify the value of <code>NextDNSName</code> in the <code>DNSName</code> parameter. Specify <code>NextHostedZoneId</code> in the <code>HostedZoneId</code> parameter.</p>"
        },
        "NextHostedZoneId":{
          "shape":"ResourceId",
          "documentation":"<p>If the value of <code>IsTruncated</code> in the <code>ListHostedZonesByNameResponse</code> is <code>true</code>, there are more hosted zones associated with the current AWS account. To get the next page of results, make another request to <code>ListHostedZonesByName</code>. Specify the value of <code>NextDNSName</code> in the <code>DNSName</code> parameter. Specify <code>NextHostedZoneId</code> in the <code>HostedZoneId</code> parameter.</p>"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The maximum number of hosted zones to be included in the response body. If the number of hosted zones associated with this AWS account exceeds <code>MaxItems</code>, the value of <code>IsTruncated</code> in the <code>ListHostedZonesByNameResponse</code> is <code>true</code>. Call <code>ListHostedZonesByName</code> again and specify the value of <code>NextDNSName</code> and <code>NextHostedZoneId</code> elements from the previous response to get the next page of results.</p>"
        }
      },
      "documentation":"<p>A complex type that contains the response for the request.</p>"
    },
    "ListHostedZonesRequest":{
      "type":"structure",
      "members":{
        "Marker":{
          "shape":"PageMarker",
          "documentation":"<p>If the request returned more than one page of results, submit another request and specify the value of <code>NextMarker</code> from the last response in the <code>marker</code> parameter to get the next page of results.</p>",
          "location":"querystring",
          "locationName":"marker"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>Specify the maximum number of hosted zones to return per page of results.</p>",
          "location":"querystring",
          "locationName":"maxitems"
        },
        "DelegationSetId":{
          "shape":"ResourceId",
          "location":"querystring",
          "locationName":"delegationsetid"
        }
      },
      "documentation":"<p>To retrieve a list of your hosted zones, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/hostedzone</code> resource. The response to this request includes a <code>HostedZones</code> element with zero or more <code>HostedZone</code> child elements. By default, the list of hosted zones is displayed on a single page. You can control the length of the page that is displayed by using the <code>MaxItems</code> parameter. You can use the <code>Marker</code> parameter to control the hosted zone that the list begins with.</p> <note>Amazon Route 53 returns a maximum of 100 items. If you set <code>MaxItems</code> to a value greater than 100, Amazon Route 53 returns only the first 100.</note>"
    },
    "ListHostedZonesResponse":{
      "type":"structure",
      "required":[
        "HostedZones",
        "Marker",
        "IsTruncated",
        "MaxItems"
      ],
      "members":{
        "HostedZones":{
          "shape":"HostedZones",
          "documentation":"<p>A complex type that contains information about the hosted zones associated with the current AWS account.</p>"
        },
        "Marker":{
          "shape":"PageMarker",
          "documentation":"<p>If the request returned more than one page of results, submit another request and specify the value of <code>NextMarker</code> from the last response in the <code>marker</code> parameter to get the next page of results.</p>"
        },
        "IsTruncated":{
          "shape":"PageTruncated",
          "documentation":"<p>A flag indicating whether there are more hosted zones to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the <code>Marker</code> element.</p> <p>Valid Values: <code>true</code> | <code>false</code></p>"
        },
        "NextMarker":{
          "shape":"PageMarker",
          "documentation":"<p>Indicates where to continue listing hosted zones. If <code>IsTruncated</code> is <code>true</code>, make another request to <code>ListHostedZones</code> and include the value of the <code>NextMarker</code> element in the <code>Marker</code> element to get the next page of results.</p>"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The maximum number of hosted zones to be included in the response body. If the number of hosted zones associated with this AWS account exceeds <code>MaxItems</code>, the value of <code>IsTruncated</code> in the response is <code>true</code>. Call <code>ListHostedZones</code> again and specify the value of <code>NextMarker</code> in the <code>Marker</code> parameter to get the next page of results.</p>"
        }
      },
      "documentation":"<p>A complex type that contains the response for the request.</p>"
    },
    "ListResourceRecordSetsRequest":{
      "type":"structure",
      "required":["HostedZoneId"],
      "members":{
        "HostedZoneId":{
          "shape":"ResourceId",
          "documentation":"<p>The ID of the hosted zone that contains the resource record sets that you want to get.</p>",
          "location":"uri",
          "locationName":"Id"
        },
        "StartRecordName":{
          "shape":"DNSName",
          "documentation":"<p>The first name in the lexicographic ordering of domain names that you want the <code>ListResourceRecordSets</code> request to list.</p>",
          "location":"querystring",
          "locationName":"name"
        },
        "StartRecordType":{
          "shape":"RRType",
          "documentation":"<p>The DNS type at which to begin the listing of resource record sets. </p> <p>Valid values: <code>A</code> | <code>AAAA</code> | <code>CNAME</code> | <code>MX</code> | <code>NS</code> | <code>PTR</code> | <code>SOA</code> | <code>SPF</code> | <code>SRV</code> | <code>TXT</code></p> <p>Values for Weighted Resource Record Sets: <code>A</code> | <code>AAAA</code> | <code>CNAME</code> | <code>TXT</code></p> <p>Values for Regional Resource Record Sets: <code>A</code> | <code>AAAA</code> | <code>CNAME</code> | <code>TXT</code></p> <p>Values for Alias Resource Record Sets: <code>A</code> | <code>AAAA</code></p> <p>Constraint: Specifying <code>type</code> without specifying <code>name</code> returns an <code>InvalidInput</code> error.</p>",
          "location":"querystring",
          "locationName":"type"
        },
        "StartRecordIdentifier":{
          "shape":"ResourceRecordSetIdentifier",
          "documentation":"<p><i>Weighted resource record sets only:</i> If results were truncated for a given DNS name and type, specify the value of <code>NextRecordIdentifier</code> from the previous response to get the next resource record set that has the current DNS name and type.</p>",
          "location":"querystring",
          "locationName":"identifier"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The maximum number of records you want in the response body.</p>",
          "location":"querystring",
          "locationName":"maxitems"
        }
      },
      "documentation":"<p>The input for a ListResourceRecordSets request.</p>"
    },
    "ListResourceRecordSetsResponse":{
      "type":"structure",
      "required":[
        "ResourceRecordSets",
        "IsTruncated",
        "MaxItems"
      ],
      "members":{
        "ResourceRecordSets":{
          "shape":"ResourceRecordSets",
          "documentation":"<p>A complex type that contains information about the resource record sets that are returned by the request.</p>"
        },
        "IsTruncated":{
          "shape":"PageTruncated",
          "documentation":"<p>A flag that indicates whether there are more resource record sets to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the <code>NextRecordName</code> element.</p> <p>Valid Values: <code>true</code> | <code>false</code></p>"
        },
        "NextRecordName":{
          "shape":"DNSName",
          "documentation":"<p>If the results were truncated, the name of the next record in the list. This element is present only if <code>IsTruncated</code> is true. </p>"
        },
        "NextRecordType":{
          "shape":"RRType",
          "documentation":"<p>If the results were truncated, the type of the next record in the list. This element is present only if <code>IsTruncated</code> is true. </p>"
        },
        "NextRecordIdentifier":{
          "shape":"ResourceRecordSetIdentifier",
          "documentation":"<p><i>Weighted resource record sets only:</i> If results were truncated for a given DNS name and type, the value of <code>SetIdentifier</code> for the next resource record set that has the current DNS name and type.</p>"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The maximum number of records you requested. The maximum value of <code>MaxItems</code> is 100.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about the resource record sets that are returned by the request and information about the response.</p>"
    },
    "ListReusableDelegationSetsRequest":{
      "type":"structure",
      "members":{
        "Marker":{
          "shape":"PageMarker",
          "documentation":"<p>If the request returned more than one page of results, submit another request and specify the value of <code>NextMarker</code> from the last response in the <code>marker</code> parameter to get the next page of results.</p>",
          "location":"querystring",
          "locationName":"marker"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>Specify the maximum number of reusable delegation sets to return per page of results.</p>",
          "location":"querystring",
          "locationName":"maxitems"
        }
      },
      "documentation":"<p>To retrieve a list of your reusable delegation sets, send a <code>GET</code> request to the <code>/<i>Route 53 API version</i>/delegationset</code> resource. The response to this request includes a <code>DelegationSets</code> element with zero or more <code>DelegationSet</code> child elements. By default, the list of reusable delegation sets is displayed on a single page. You can control the length of the page that is displayed by using the <code>MaxItems</code> parameter. You can use the <code>Marker</code> parameter to control the delegation set that the list begins with.</p> <note> Amazon Route 53 returns a maximum of 100 items. If you set <code>MaxItems</code> to a value greater than 100, Amazon Route 53 returns only the first 100.</note>"
    },
    "ListReusableDelegationSetsResponse":{
      "type":"structure",
      "required":[
        "DelegationSets",
        "Marker",
        "IsTruncated",
        "MaxItems"
      ],
      "members":{
        "DelegationSets":{
          "shape":"DelegationSets",
          "documentation":"<p>A complex type that contains information about the reusable delegation sets associated with the current AWS account.</p>"
        },
        "Marker":{
          "shape":"PageMarker",
          "documentation":"<p>If the request returned more than one page of results, submit another request and specify the value of <code>NextMarker</code> from the last response in the <code>marker</code> parameter to get the next page of results.</p>"
        },
        "IsTruncated":{
          "shape":"PageTruncated",
          "documentation":"<p>A flag indicating whether there are more reusable delegation sets to be listed. If your results were truncated, you can make a follow-up request for the next page of results by using the <code>Marker</code> element.</p> <p>Valid Values: <code>true</code> | <code>false</code></p>"
        },
        "NextMarker":{
          "shape":"PageMarker",
          "documentation":"<p>Indicates where to continue listing reusable delegation sets. If <code>IsTruncated</code> is <code>true</code>, make another request to <code>ListReusableDelegationSets</code> and include the value of the <code>NextMarker</code> element in the <code>Marker</code> element of the previous response to get the next page of results.</p>"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The maximum number of reusable delegation sets to be included in the response body. If the number of reusable delegation sets associated with this AWS account exceeds <code>MaxItems</code>, the value of <code>IsTruncated</code> in the response is <code>true</code>. To get the next page of results, call <code>ListReusableDelegationSets</code> again and specify the value of <code>NextMarker</code> from the previous response in the <code>Marker</code> element of the request.</p>"
        }
      },
      "documentation":"<p>A complex type that contains the response for the request.</p>"
    },
    "ListTagsForResourceRequest":{
      "type":"structure",
      "required":[
        "ResourceType",
        "ResourceId"
      ],
      "members":{
        "ResourceType":{
          "shape":"TagResourceType",
          "documentation":"<p>The type of the resource.</p> <p>- The resource type for health checks is <code>healthcheck</code>.</p> <p>- The resource type for hosted zones is <code>hostedzone</code>.</p>",
          "location":"uri",
          "locationName":"ResourceType"
        },
        "ResourceId":{
          "shape":"TagResourceId",
          "documentation":"<p>The ID of the resource for which you want to retrieve tags.</p>",
          "location":"uri",
          "locationName":"ResourceId"
        }
      },
      "documentation":"<p>A complex type containing information about a request for a list of the tags that are associated with an individual resource.</p>"
    },
    "ListTagsForResourceResponse":{
      "type":"structure",
      "required":["ResourceTagSet"],
      "members":{
        "ResourceTagSet":{
          "shape":"ResourceTagSet",
          "documentation":"<p>A <code>ResourceTagSet</code> containing tags associated with the specified resource.</p>"
        }
      },
      "documentation":"<p>A complex type containing tags for the specified resource.</p>"
    },
    "ListTagsForResourcesRequest":{
      "type":"structure",
      "required":[
        "ResourceType",
        "ResourceIds"
      ],
      "members":{
        "ResourceType":{
          "shape":"TagResourceType",
          "documentation":"<p>The type of the resources.</p> <p>- The resource type for health checks is <code>healthcheck</code>.</p> <p>- The resource type for hosted zones is <code>hostedzone</code>.</p>",
          "location":"uri",
          "locationName":"ResourceType"
        },
        "ResourceIds":{
          "shape":"TagResourceIdList",
          "documentation":"<p>A complex type that contains the ResourceId element for each resource for which you want to get a list of tags.</p>"
        }
      },
      "documentation":"<p>A complex type containing information about a request for a list of the tags that are associated with up to 10 specified resources.</p>"
    },
    "ListTagsForResourcesResponse":{
      "type":"structure",
      "required":["ResourceTagSets"],
      "members":{
        "ResourceTagSets":{
          "shape":"ResourceTagSetList",
          "documentation":"<p>A list of <code>ResourceTagSet</code>s containing tags associated with the specified resources.</p>"
        }
      },
      "documentation":"<p>A complex type containing tags for the specified resources.</p>"
    },
    "ListTrafficPoliciesRequest":{
      "type":"structure",
      "members":{
        "TrafficPolicyIdMarker":{
          "shape":"TrafficPolicyId",
          "documentation":"<p>For your first request to <code>ListTrafficPolicies</code>, do not include the <code>TrafficPolicyIdMarker</code> parameter.</p> <p>If you have more traffic policies than the value of <code>MaxItems</code>, <code>ListTrafficPolicies</code> returns only the first <code>MaxItems</code> traffic policies. To get the next group of <code>MaxItems</code> policies, submit another request to <code>ListTrafficPolicies</code>. For the value of <code>TrafficPolicyIdMarker</code>, specify the value of the <code>TrafficPolicyIdMarker</code> element that was returned in the previous response.</p> <p>Policies are listed in the order in which they were created.</p>",
          "location":"querystring",
          "locationName":"trafficpolicyid"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The maximum number of traffic policies to be included in the response body for this request. If you have more than <code>MaxItems</code> traffic policies, the value of the <code>IsTruncated</code> element in the response is <code>true</code>, and the value of the <code>TrafficPolicyIdMarker</code> element is the ID of the first traffic policy in the next group of <code>MaxItems</code> traffic policies.</p>",
          "location":"querystring",
          "locationName":"maxitems"
        }
      },
      "documentation":"<p>A complex type that contains the information about the request to list the traffic policies that are associated with the current AWS account.</p>"
    },
    "ListTrafficPoliciesResponse":{
      "type":"structure",
      "required":[
        "TrafficPolicySummaries",
        "IsTruncated",
        "TrafficPolicyIdMarker",
        "MaxItems"
      ],
      "members":{
        "TrafficPolicySummaries":{
          "shape":"TrafficPolicySummaries",
          "documentation":"<p>A list that contains one <code>TrafficPolicySummary</code> element for each traffic policy that was created by the current AWS account.</p>"
        },
        "IsTruncated":{
          "shape":"PageTruncated",
          "documentation":"<p>A flag that indicates whether there are more traffic policies to be listed. If the response was truncated, you can get the next group of <code>MaxItems</code> traffic policies by calling <code>ListTrafficPolicies</code> again and specifying the value of the <code>TrafficPolicyIdMarker</code> element in the <code>TrafficPolicyIdMarker</code> request parameter.</p> <p>Valid Values: <code>true</code> | <code>false</code></p>"
        },
        "TrafficPolicyIdMarker":{
          "shape":"TrafficPolicyId",
          "documentation":"<p>If the value of <code>IsTruncated</code> is <code>true</code>, <code>TrafficPolicyIdMarker</code> is the ID of the first traffic policy in the next group of <code>MaxItems</code> traffic policies.</p>"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The value that you specified for the <code>MaxItems</code> parameter in the call to <code>ListTrafficPolicies</code> that produced the current response.</p>"
        }
      },
      "documentation":"<p>A complex type that contains the response information for the request.</p>"
    },
    "ListTrafficPolicyInstancesByHostedZoneRequest":{
      "type":"structure",
      "required":["HostedZoneId"],
      "members":{
        "HostedZoneId":{
          "shape":"ResourceId",
          "documentation":"<p>The ID of the hosted zone for which you want to list traffic policy instances.</p>",
          "location":"querystring",
          "locationName":"id"
        },
        "TrafficPolicyInstanceNameMarker":{
          "shape":"DNSName",
          "documentation":"<p>For the first request to <code>ListTrafficPolicyInstancesByHostedZone</code>, omit this value.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>, <code>TrafficPolicyInstanceNameMarker</code> is the name of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>, there are no more traffic policy instances to get for this hosted zone.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>, omit this value.</p>",
          "location":"querystring",
          "locationName":"trafficpolicyinstancename"
        },
        "TrafficPolicyInstanceTypeMarker":{
          "shape":"RRType",
          "documentation":"<p>For the first request to <code>ListTrafficPolicyInstancesByHostedZone</code>, omit this value.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>, <code>TrafficPolicyInstanceTypeMarker</code> is the DNS type of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>, there are no more traffic policy instances to get for this hosted zone.</p>",
          "location":"querystring",
          "locationName":"trafficpolicyinstancetype"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The maximum number of traffic policy instances to be included in the response body for this request. If you have more than <code>MaxItems</code> traffic policy instances, the value of the <code>IsTruncated</code> element in the response is <code>true</code>, and the values of <code>HostedZoneIdMarker</code>, <code>TrafficPolicyInstanceNameMarker</code>, and <code>TrafficPolicyInstanceTypeMarker</code> represent the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p>",
          "location":"querystring",
          "locationName":"maxitems"
        }
      },
      "documentation":"<p>A request for the traffic policy instances that you created in a specified hosted zone.</p>"
    },
    "ListTrafficPolicyInstancesByHostedZoneResponse":{
      "type":"structure",
      "required":[
        "TrafficPolicyInstances",
        "IsTruncated",
        "MaxItems"
      ],
      "members":{
        "TrafficPolicyInstances":{
          "shape":"TrafficPolicyInstances",
          "documentation":"<p>A list that contains one <code>TrafficPolicyInstance</code> element for each traffic policy instance that matches the elements in the request. </p>"
        },
        "TrafficPolicyInstanceNameMarker":{
          "shape":"DNSName",
          "documentation":"<p>If <code>IsTruncated</code> is <code>true</code>, <code>TrafficPolicyInstanceNameMarker</code> is the name of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p>"
        },
        "TrafficPolicyInstanceTypeMarker":{
          "shape":"RRType",
          "documentation":"<p>If <code>IsTruncated</code> is true, <code>TrafficPolicyInstanceTypeMarker</code> is the DNS type of the resource record sets that are associated with the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p>"
        },
        "IsTruncated":{
          "shape":"PageTruncated",
          "documentation":"<p>A flag that indicates whether there are more traffic policy instances to be listed. If the response was truncated, you can get the next group of <code>MaxItems</code> traffic policy instances by calling <code>ListTrafficPolicyInstancesByHostedZone</code> again and specifying the values of the <code>HostedZoneIdMarker</code>, <code>TrafficPolicyInstanceNameMarker</code>, and <code>TrafficPolicyInstanceTypeMarker</code> elements in the corresponding request parameters.</p> <p>Valid Values: <code>true</code> | <code>false</code></p>"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The value that you specified for the <code>MaxItems</code> parameter in the call to <code>ListTrafficPolicyInstancesByHostedZone</code> that produced the current response. </p>"
        }
      },
      "documentation":"<p>A complex type that contains the response information for the request.</p>"
    },
    "ListTrafficPolicyInstancesByPolicyRequest":{
      "type":"structure",
      "required":[
        "TrafficPolicyId",
        "TrafficPolicyVersion"
      ],
      "members":{
        "TrafficPolicyId":{
          "shape":"TrafficPolicyId",
          "documentation":"<p>The ID of the traffic policy for which you want to list traffic policy instances.</p>",
          "location":"querystring",
          "locationName":"id"
        },
        "TrafficPolicyVersion":{
          "shape":"TrafficPolicyVersion",
          "documentation":"<p>The version of the traffic policy for which you want to list traffic policy instances. The version must be associated with the traffic policy that is specified by <code>TrafficPolicyId</code>.</p>",
          "location":"querystring",
          "locationName":"version"
        },
        "HostedZoneIdMarker":{
          "shape":"ResourceId",
          "documentation":"<p>For the first request to <code>ListTrafficPolicyInstancesByPolicy</code>, omit this value.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>, <code>HostedZoneIdMarker</code> is the ID of the hosted zone for the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>, there are no more traffic policy instances to get for this hosted zone.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>, omit this value.</p>",
          "location":"querystring",
          "locationName":"hostedzoneid"
        },
        "TrafficPolicyInstanceNameMarker":{
          "shape":"DNSName",
          "documentation":"<p>For the first request to <code>ListTrafficPolicyInstancesByPolicy</code>, omit this value.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>, <code>TrafficPolicyInstanceNameMarker</code> is the name of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>, there are no more traffic policy instances to get for this hosted zone.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>, omit this value.</p>",
          "location":"querystring",
          "locationName":"trafficpolicyinstancename"
        },
        "TrafficPolicyInstanceTypeMarker":{
          "shape":"RRType",
          "documentation":"<p>For the first request to <code>ListTrafficPolicyInstancesByPolicy</code>, omit this value.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>, <code>TrafficPolicyInstanceTypeMarker</code> is the DNS type of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>, there are no more traffic policy instances to get for this hosted zone.</p>",
          "location":"querystring",
          "locationName":"trafficpolicyinstancetype"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The maximum number of traffic policy instances to be included in the response body for this request. If you have more than <code>MaxItems</code> traffic policy instances, the value of the <code>IsTruncated</code> element in the response is <code>true</code>, and the values of <code>HostedZoneIdMarker</code>, <code>TrafficPolicyInstanceNameMarker</code>, and <code>TrafficPolicyInstanceTypeMarker</code> represent the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p>",
          "location":"querystring",
          "locationName":"maxitems"
        }
      },
      "documentation":"<p>A complex type that contains the information about the request to list your traffic policy instances.</p>"
    },
    "ListTrafficPolicyInstancesByPolicyResponse":{
      "type":"structure",
      "required":[
        "TrafficPolicyInstances",
        "IsTruncated",
        "MaxItems"
      ],
      "members":{
        "TrafficPolicyInstances":{
          "shape":"TrafficPolicyInstances",
          "documentation":"<p>A list that contains one <code>TrafficPolicyInstance</code> element for each traffic policy instance that matches the elements in the request.</p>"
        },
        "HostedZoneIdMarker":{
          "shape":"ResourceId",
          "documentation":"<p>If <code>IsTruncated</code> is <code>true</code>, <code>HostedZoneIdMarker</code> is the ID of the hosted zone of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p>"
        },
        "TrafficPolicyInstanceNameMarker":{
          "shape":"DNSName",
          "documentation":"<p>If <code>IsTruncated</code> is <code>true</code>, <code>TrafficPolicyInstanceNameMarker</code> is the name of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p>"
        },
        "TrafficPolicyInstanceTypeMarker":{
          "shape":"RRType",
          "documentation":"<p>If <code>IsTruncated</code> is <code>true</code>, <code>TrafficPolicyInstanceTypeMarker</code> is the DNS type of the resource record sets that are associated with the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p>"
        },
        "IsTruncated":{
          "shape":"PageTruncated",
          "documentation":"<p>A flag that indicates whether there are more traffic policy instances to be listed. If the response was truncated, you can get the next group of <code>MaxItems</code> traffic policy instances by calling <code>ListTrafficPolicyInstancesByPolicy</code> again and specifying the values of the <code>HostedZoneIdMarker</code>, <code>TrafficPolicyInstanceNameMarker</code>, and <code>TrafficPolicyInstanceTypeMarker</code> elements in the corresponding request parameters.</p> <p>Valid Values: <code>true</code> | <code>false</code></p>"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The value that you specified for the <code>MaxItems</code> parameter in the call to <code>ListTrafficPolicyInstancesByPolicy</code> that produced the current response.</p>"
        }
      },
      "documentation":"<p>A complex type that contains the response information for the request.</p>"
    },
    "ListTrafficPolicyInstancesRequest":{
      "type":"structure",
      "members":{
        "HostedZoneIdMarker":{
          "shape":"ResourceId",
          "documentation":"<p>For the first request to <code>ListTrafficPolicyInstances</code>, omit this value.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>, you have more traffic policy instances. To get the next group of <code>MaxItems</code> traffic policy instances, submit another <code>ListTrafficPolicyInstances</code> request. For the value of <code>HostedZoneIdMarker</code>, specify the value of <code>HostedZoneIdMarker</code> from the previous response, which is the hosted zone ID of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>, there are no more traffic policy instances to get.</p>",
          "location":"querystring",
          "locationName":"hostedzoneid"
        },
        "TrafficPolicyInstanceNameMarker":{
          "shape":"DNSName",
          "documentation":"<p>For the first request to <code>ListTrafficPolicyInstances</code>, omit this value.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>, <code>TrafficPolicyInstanceNameMarker</code> is the name of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>, there are no more traffic policy instances to get.</p>",
          "location":"querystring",
          "locationName":"trafficpolicyinstancename"
        },
        "TrafficPolicyInstanceTypeMarker":{
          "shape":"RRType",
          "documentation":"<p>For the first request to <code>ListTrafficPolicyInstances</code>, omit this value.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>true</code>, <code>TrafficPolicyInstanceTypeMarker</code> is the DNS type of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p> <p>If the value of <code>IsTruncated</code> in the previous response was <code>false</code>, there are no more traffic policy instances to get.</p>",
          "location":"querystring",
          "locationName":"trafficpolicyinstancetype"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The maximum number of traffic policy instances to be included in the response body for this request. If you have more than <code>MaxItems</code> traffic policy instances, the value of the <code>IsTruncated</code> element in the response is <code>true</code>, and the values of <code>HostedZoneIdMarker</code>, <code>TrafficPolicyInstanceNameMarker</code>, and <code>TrafficPolicyInstanceTypeMarker</code> represent the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p>",
          "location":"querystring",
          "locationName":"maxitems"
        }
      },
      "documentation":"<p>A complex type that contains the information about the request to list your traffic policy instances.</p>"
    },
    "ListTrafficPolicyInstancesResponse":{
      "type":"structure",
      "required":[
        "TrafficPolicyInstances",
        "IsTruncated",
        "MaxItems"
      ],
      "members":{
        "TrafficPolicyInstances":{
          "shape":"TrafficPolicyInstances",
          "documentation":"<p>A list that contains one <code>TrafficPolicyInstance</code> element for each traffic policy instance that matches the elements in the request.</p>"
        },
        "HostedZoneIdMarker":{
          "shape":"ResourceId",
          "documentation":"<p>If <code>IsTruncated</code> is <code>true</code>, <code>HostedZoneIdMarker</code> is the ID of the hosted zone of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p>"
        },
        "TrafficPolicyInstanceNameMarker":{
          "shape":"DNSName",
          "documentation":"<p>If <code>IsTruncated</code> is <code>true</code>, <code>TrafficPolicyInstanceNameMarker</code> is the name of the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p>"
        },
        "TrafficPolicyInstanceTypeMarker":{
          "shape":"RRType",
          "documentation":"<p>If <code>IsTruncated</code> is <code>true</code>, <code>TrafficPolicyInstanceTypeMarker</code> is the DNS type of the resource record sets that are associated with the first traffic policy instance in the next group of <code>MaxItems</code> traffic policy instances.</p>"
        },
        "IsTruncated":{
          "shape":"PageTruncated",
          "documentation":"<p>A flag that indicates whether there are more traffic policy instances to be listed. If the response was truncated, you can get the next group of <code>MaxItems</code> traffic policy instances by calling <code>ListTrafficPolicyInstances</code> again and specifying the values of the <code>HostedZoneIdMarker</code>, <code>TrafficPolicyInstanceNameMarker</code>, and <code>TrafficPolicyInstanceTypeMarker</code> elements in the corresponding request parameters.</p> <p>Valid Values: <code>true</code> | <code>false</code></p>"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The value that you specified for the <code>MaxItems</code> parameter in the call to <code>ListTrafficPolicyInstances</code> that produced the current response.</p>"
        }
      },
      "documentation":"<p>A complex type that contains the response information for the request.</p>"
    },
    "ListTrafficPolicyVersionsRequest":{
      "type":"structure",
      "required":["Id"],
      "members":{
        "Id":{
          "shape":"TrafficPolicyId",
          "documentation":"<p>Specify the value of <code>Id</code> of the traffic policy for which you want to list all versions.</p>",
          "location":"uri",
          "locationName":"Id"
        },
        "TrafficPolicyVersionMarker":{
          "shape":"TrafficPolicyVersionMarker",
          "documentation":"<p>For your first request to <code>ListTrafficPolicyVersions</code>, do not include the <code>TrafficPolicyVersionMarker</code> parameter.</p> <p>If you have more traffic policy versions than the value of <code>MaxItems</code>, <code>ListTrafficPolicyVersions</code> returns only the first group of <code>MaxItems</code> versions. To get the next group of <code>MaxItems</code> traffic policy versions, submit another request to <code>ListTrafficPolicyVersions</code>. For the value of <code>TrafficPolicyVersionMarker</code>, specify the value of the <code>TrafficPolicyVersionMarker</code> element that was returned in the previous response.</p> <p>Traffic policy versions are listed in sequential order.</p>",
          "location":"querystring",
          "locationName":"trafficpolicyversion"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The maximum number of traffic policy versions that you want Amazon Route 53 to include in the response body for this request. If the specified traffic policy has more than <code>MaxItems</code> versions, the value of the <code>IsTruncated</code> element in the response is <code>true</code>, and the value of the <code>TrafficPolicyVersionMarker</code> element is the ID of the first version in the next group of <code>MaxItems</code> traffic policy versions.</p>",
          "location":"querystring",
          "locationName":"maxitems"
        }
      },
      "documentation":"<p>A complex type that contains the information about the request to list your traffic policies.</p>"
    },
    "ListTrafficPolicyVersionsResponse":{
      "type":"structure",
      "required":[
        "TrafficPolicies",
        "IsTruncated",
        "TrafficPolicyVersionMarker",
        "MaxItems"
      ],
      "members":{
        "TrafficPolicies":{
          "shape":"TrafficPolicies",
          "documentation":"<p>A list that contains one <code>TrafficPolicy</code> element for each traffic policy version that is associated with the specified traffic policy.</p>"
        },
        "IsTruncated":{
          "shape":"PageTruncated",
          "documentation":"<p>A flag that indicates whether there are more traffic policies to be listed. If the response was truncated, you can get the next group of <code>maxitems</code> traffic policies by calling <code>ListTrafficPolicyVersions</code> again and specifying the value of the <code>NextMarker</code> element in the marker parameter.</p> <p>Valid Values: <code>true</code> | <code>false</code></p>"
        },
        "TrafficPolicyVersionMarker":{
          "shape":"TrafficPolicyVersionMarker",
          "documentation":"<p>If <code>IsTruncated</code> is <code>true</code>, the value of <code>TrafficPolicyVersionMarker</code> identifies the first traffic policy in the next group of <code>MaxItems</code> traffic policies. Call <code>ListTrafficPolicyVersions</code> again and specify the value of <code>TrafficPolicyVersionMarker</code> in the <code>TrafficPolicyVersionMarker</code> request parameter.</p> <p>This element is present only if <code>IsTruncated</code> is <code>true</code>.</p>"
        },
        "MaxItems":{
          "shape":"PageMaxItems",
          "documentation":"<p>The value that you specified for the <code>maxitems</code> parameter in the call to <code>ListTrafficPolicyVersions</code> that produced the current response.</p>"
        }
      },
      "documentation":"<p>A complex type that contains the response information for the request.</p>"
    },
    "MeasureLatency":{"type":"boolean"},
    "Message":{
      "type":"string",
      "max":1024
    },
    "MetricName":{
      "type":"string",
      "max":255,
      "min":1
    },
    "Namespace":{
      "type":"string",
      "max":255,
      "min":1
    },
    "NoSuchChange":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":404},
      "exception":true
    },
    "NoSuchDelegationSet":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>The specified delegation set does not exist.</p>",
      "exception":true
    },
    "NoSuchGeoLocation":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>The geo location you are trying to get does not exist.</p>",
      "error":{"httpStatusCode":404},
      "exception":true
    },
    "NoSuchHealthCheck":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>The health check you are trying to get or delete does not exist.</p>",
      "error":{"httpStatusCode":404},
      "exception":true
    },
    "NoSuchHostedZone":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":404},
      "exception":true
    },
    "NoSuchTrafficPolicy":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>No traffic policy exists with the specified ID.</p>",
      "error":{"httpStatusCode":404},
      "exception":true
    },
    "NoSuchTrafficPolicyInstance":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>No traffic policy instance exists with the specified ID.</p>",
      "error":{"httpStatusCode":404},
      "exception":true
    },
    "Nonce":{
      "type":"string",
      "max":128,
      "min":1
    },
    "PageMarker":{
      "type":"string",
      "max":64
    },
    "PageMaxItems":{"type":"string"},
    "PageTruncated":{"type":"boolean"},
    "Period":{
      "type":"integer",
      "min":60
    },
    "Port":{
      "type":"integer",
      "max":65535,
      "min":1
    },
    "PriorRequestNotComplete":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "documentation":"<p>The request was rejected because Amazon Route 53 was still processing a prior request.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "PublicZoneVPCAssociation":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>The hosted zone you are trying to associate VPC with doesn't have any VPC association. Amazon Route 53 currently doesn't support associate a VPC with a public hosted zone.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "RData":{
      "type":"string",
      "max":4000
    },
    "RRType":{
      "type":"string",
      "enum":[
        "SOA",
        "A",
        "TXT",
        "NS",
        "CNAME",
        "MX",
        "PTR",
        "SRV",
        "SPF",
        "AAAA"
      ]
    },
    "RequestInterval":{
      "type":"integer",
      "max":30,
      "min":10
    },
    "ResourceDescription":{
      "type":"string",
      "max":256
    },
    "ResourceId":{
      "type":"string",
      "max":32
    },
    "ResourcePath":{
      "type":"string",
      "max":255
    },
    "ResourceRecord":{
      "type":"structure",
      "required":["Value"],
      "members":{
        "Value":{
          "shape":"RData",
          "documentation":"<p>The current or new DNS record value, not to exceed 4,000 characters. In the case of a <code>DELETE</code> action, if the current value does not match the actual value, an error is returned. For descriptions about how to format <code>Value</code> for different record types, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html\">Supported DNS Resource Record Types</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>You can specify more than one value for all record types except <code>CNAME</code> and <code>SOA</code>. </p>"
        }
      },
      "documentation":"<p>A complex type that contains the value of the <code>Value</code> element for the current resource record set.</p>"
    },
    "ResourceRecordSet":{
      "type":"structure",
      "required":[
        "Name",
        "Type"
      ],
      "members":{
        "Name":{
          "shape":"DNSName",
          "documentation":"<p>The name of the domain you want to perform the action on.</p> <p>Enter a fully qualified domain name, for example, <code>www.example.com</code>. You can optionally include a trailing dot. If you omit the trailing dot, Amazon Route 53 still assumes that the domain name that you specify is fully qualified. This means that Amazon Route 53 treats <code>www.example.com</code> (without a trailing dot) and <code>www.example.com.</code> (with a trailing dot) as identical.</p> <p>For information about how to specify characters other than a-z, 0-9, and - (hyphen) and how to specify internationalized domain names, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DomainNameFormat.html\">DNS Domain Name Format</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>You can use an asterisk (*) character in the name. DNS treats the * character either as a wildcard or as the * character (ASCII 42), depending on where it appears in the name. For more information, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/DomainNameFormat.html#domain-name-format-asterisk\">Using an Asterisk (*) in the Names of Hosted Zones and Resource Record Sets</a> in the <i>Amazon Route 53 Developer Guide</i></p> <important>You can't use the * wildcard for resource records sets that have a type of NS.</important>"
        },
        "Type":{
          "shape":"RRType",
          "documentation":"<p>The DNS record type. For information about different record types and how data is encoded for them, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/ResourceRecordTypes.html\">Supported DNS Resource Record Types</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>Valid values for basic resource record sets: <code>A</code> | <code>AAAA</code> | <code>CNAME</code> | <code>MX</code> | <code>NS</code> | <code>PTR</code> | <code>SOA</code> | <code>SPF</code> | <code>SRV</code> | <code>TXT</code></p> <p>Values for weighted, latency, geolocation, and failover resource record sets: <code>A</code> | <code>AAAA</code> | <code>CNAME</code> | <code>MX</code> | <code>PTR</code> | <code>SPF</code> | <code>SRV</code> | <code>TXT</code>. When creating a group of weighted, latency, geolocation, or failover resource record sets, specify the same value for all of the resource record sets in the group.</p> <note>SPF records were formerly used to verify the identity of the sender of email messages. However, we no longer recommend that you create resource record sets for which the value of <code>Type</code> is <code>SPF</code>. RFC 7208, <i>Sender Policy Framework (SPF) for Authorizing Use of Domains in Email, Version 1</i>, has been updated to say, \"...[I]ts existence and mechanism defined in [RFC4408] have led to some interoperability issues. Accordingly, its use is no longer appropriate for SPF version 1; implementations are not to use it.\" In RFC 7208, see section 14.1, <a href=\"http://tools.ietf.org/html/rfc7208#section-14.1\">The SPF DNS Record Type</a>.</note> <p>Values for alias resource record sets:</p> <ul> <li><b>CloudFront distributions:</b> <code>A</code></li> <li><b>ELB load balancers:</b> <code>A</code> | <code>AAAA</code></li> <li><b>Amazon S3 buckets:</b> A</li> <li><b>Another resource record set in this hosted zone:</b> Specify the type of the resource record set for which you're creating the alias. Specify any value except <code>NS</code> or <code>SOA</code>.</li> </ul>"
        },
        "SetIdentifier":{
          "shape":"ResourceRecordSetIdentifier",
          "documentation":"<p><i>Weighted, Latency, Geo, and Failover resource record sets only:</i> An identifier that differentiates among multiple resource record sets that have the same combination of DNS name and type. The value of <code>SetIdentifier</code> must be unique for each resource record set that has the same combination of DNS name and type.</p>"
        },
        "Weight":{
          "shape":"ResourceRecordSetWeight",
          "documentation":"<p><i>Weighted resource record sets only:</i> Among resource record sets that have the same combination of DNS name and type, a value that determines the proportion of DNS queries that Amazon Route 53 responds to using the current resource record set. Amazon Route 53 calculates the sum of the weights for the resource record sets that have the same combination of DNS name and type. Amazon Route 53 then responds to queries based on the ratio of a resource's weight to the total. Note the following:</p> <ul> <li>You must specify a value for the <code>Weight</code> element for every weighted resource record set.</li> <li>You can only specify one <code>ResourceRecord</code> per weighted resource record set.</li> <li>You cannot create latency, failover, or geolocation resource record sets that have the same values for the <code>Name</code> and <code>Type</code> elements as weighted resource record sets.</li> <li>You can create a maximum of 100 weighted resource record sets that have the same values for the <code>Name</code> and <code>Type</code> elements.</li> <li><p>For weighted (but not weighted alias) resource record sets, if you set <code>Weight</code> to <code>0</code> for a resource record set, Amazon Route 53 never responds to queries with the applicable value for that resource record set. However, if you set <code>Weight</code> to <code>0</code> for all resource record sets that have the same combination of DNS name and type, traffic is routed to all resources with equal probability.</p> <p>The effect of setting <code>Weight</code> to <code>0</code> is different when you associate health checks with weighted resource record sets. For more information, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover-configuring-options.html\">Options for Configuring Amazon Route 53 Active-Active and Active-Passive Failover</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> </li> </ul>"
        },
        "Region":{
          "shape":"ResourceRecordSetRegion",
          "documentation":"<p><i>Latency-based resource record sets only:</i> The Amazon EC2 region where the resource that is specified in this resource record set resides. The resource typically is an AWS resource, such as an Amazon EC2 instance or an ELB load balancer, and is referred to by an IP address or a DNS domain name, depending on the record type.</p> <note>You can create latency and latency alias resource record sets only in public hosted zones.</note> <p>When Amazon Route 53 receives a DNS query for a domain name and type for which you have created latency resource record sets, Amazon Route 53 selects the latency resource record set that has the lowest latency between the end user and the associated Amazon EC2 region. Amazon Route 53 then returns the value that is associated with the selected resource record set.</p> <p>Note the following:</p> <ul> <li>You can only specify one <code>ResourceRecord</code> per latency resource record set.</li> <li>You can only create one latency resource record set for each Amazon EC2 region.</li> <li>You are not required to create latency resource record sets for all Amazon EC2 regions. Amazon Route 53 will choose the region with the best latency from among the regions for which you create latency resource record sets.</li> <li>You cannot create non-latency resource record sets that have the same values for the <code>Name</code> and <code>Type</code> elements as latency resource record sets.</li> </ul>"
        },
        "GeoLocation":{
          "shape":"GeoLocation",
          "documentation":"<p><i>Geo location resource record sets only:</i> A complex type that lets you control how Amazon Route 53 responds to DNS queries based on the geographic origin of the query. For example, if you want all queries from Africa to be routed to a web server with an IP address of <code>192.0.2.111</code>, create a resource record set with a <code>Type</code> of <code>A</code> and a <code>ContinentCode</code> of <code>AF</code>.</p> <note>You can create geolocation and geolocation alias resource record sets only in public hosted zones.</note> <p>If you create separate resource record sets for overlapping geographic regions (for example, one resource record set for a continent and one for a country on the same continent), priority goes to the smallest geographic region. This allows you to route most queries for a continent to one resource and to route queries for a country on that continent to a different resource.</p> <p>You cannot create two geolocation resource record sets that specify the same geographic location.</p> <p>The value <code>*</code> in the <code>CountryCode</code> element matches all geographic locations that aren't specified in other geolocation resource record sets that have the same values for the <code>Name</code> and <code>Type</code> elements.</p> <important>Geolocation works by mapping IP addresses to locations. However, some IP addresses aren't mapped to geographic locations, so even if you create geolocation resource record sets that cover all seven continents, Amazon Route 53 will receive some DNS queries from locations that it can't identify. We recommend that you create a resource record set for which the value of <code>CountryCode</code> is <code>*</code>, which handles both queries that come from locations for which you haven't created geolocation resource record sets and queries from IP addresses that aren't mapped to a location. If you don't create a <code>*</code> resource record set, Amazon Route 53 returns a \"no answer\" response for queries from those locations.</important> <p>You cannot create non-geolocation resource record sets that have the same values for the <code>Name</code> and <code>Type</code> elements as geolocation resource record sets.</p>"
        },
        "Failover":{
          "shape":"ResourceRecordSetFailover",
          "documentation":"<p><i>Failover resource record sets only:</i> To configure failover, you add the <code>Failover</code> element to two resource record sets. For one resource record set, you specify <code>PRIMARY</code> as the value for <code>Failover</code>; for the other resource record set, you specify <code>SECONDARY</code>. In addition, you include the <code>HealthCheckId</code> element and specify the health check that you want Amazon Route 53 to perform for each resource record set.</p> <note>You can create failover and failover alias resource record sets only in public hosted zones.</note> <p>Except where noted, the following failover behaviors assume that you have included the <code>HealthCheckId</code> element in both resource record sets:</p> <ul> <li>When the primary resource record set is healthy, Amazon Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the secondary resource record set.</li> <li>When the primary resource record set is unhealthy and the secondary resource record set is healthy, Amazon Route 53 responds to DNS queries with the applicable value from the secondary resource record set.</li> <li>When the secondary resource record set is unhealthy, Amazon Route 53 responds to DNS queries with the applicable value from the primary resource record set regardless of the health of the primary resource record set.</li> <li>If you omit the <code>HealthCheckId</code> element for the secondary resource record set, and if the primary resource record set is unhealthy, Amazon Route 53 always responds to DNS queries with the applicable value from the secondary resource record set. This is true regardless of the health of the associated endpoint.</li> </ul> <p>You cannot create non-failover resource record sets that have the same values for the <code>Name</code> and <code>Type</code> elements as failover resource record sets.</p> <p>For failover alias resource record sets, you must also include the <code>EvaluateTargetHealth</code> element and set the value to true.</p> <p>For more information about configuring failover for Amazon Route 53, see <a href=\"http://docs.aws.amazon.com/Route53/latest/DeveloperGuide/dns-failover.html\">Amazon Route 53 Health Checks and DNS Failover</a> in the <i>Amazon Route 53 Developer Guide</i>.</p> <p>Valid values: <code>PRIMARY</code> | <code>SECONDARY</code></p>"
        },
        "TTL":{
          "shape":"TTL",
          "documentation":"<p>The cache time to live for the current resource record set. Note the following:</p> <ul> <li>If you're creating a non-alias resource record set, <code>TTL</code> is required. </li> <li>If you're creating an alias resource record set, omit <code>TTL</code>. Amazon Route 53 uses the value of <code>TTL</code> for the alias target. </li> <li>If you're associating this resource record set with a health check (if you're adding a <code>HealthCheckId</code> element), we recommend that you specify a <code>TTL</code> of 60 seconds or less so clients respond quickly to changes in health status.</li> <li>All of the resource record sets in a group of weighted, latency, geolocation, or failover resource record sets must have the same value for <code>TTL</code>.</li> <li>If a group of weighted resource record sets includes one or more weighted alias resource record sets for which the alias target is an ELB load balancer, we recommend that you specify a <code>TTL</code> of 60 seconds for all of the non-alias weighted resource record sets that have the same name and type. Values other than 60 seconds (the TTL for load balancers) will change the effect of the values that you specify for <code>Weight</code>.</li> </ul>"
        },
        "ResourceRecords":{
          "shape":"ResourceRecords",
          "documentation":"<p>A complex type that contains the resource records for the current resource record set.</p>"
        },
        "AliasTarget":{
          "shape":"AliasTarget",
          "documentation":"<p><i>Alias resource record sets only:</i> Information about the AWS resource to which you are redirecting traffic.</p>"
        },
        "HealthCheckId":{
          "shape":"HealthCheckId",
          "documentation":"<p><i>Health Check resource record sets only, not required for alias resource record sets:</i> An identifier that is used to identify health check associated with the resource record set.</p>"
        },
        "TrafficPolicyInstanceId":{"shape":"TrafficPolicyInstanceId"}
      },
      "documentation":"<p>A complex type that contains information about the current resource record set.</p>"
    },
    "ResourceRecordSetFailover":{
      "type":"string",
      "enum":[
        "PRIMARY",
        "SECONDARY"
      ]
    },
    "ResourceRecordSetIdentifier":{
      "type":"string",
      "max":128,
      "min":1
    },
    "ResourceRecordSetRegion":{
      "type":"string",
      "enum":[
        "us-east-1",
        "us-west-1",
        "us-west-2",
        "eu-west-1",
        "eu-central-1",
        "ap-southeast-1",
        "ap-southeast-2",
        "ap-northeast-1",
        "ap-northeast-2",
        "sa-east-1",
        "cn-north-1",
        "ap-south-1"
      ],
      "max":64,
      "min":1
    },
    "ResourceRecordSetWeight":{
      "type":"long",
      "max":255,
      "min":0
    },
    "ResourceRecordSets":{
      "type":"list",
      "member":{
        "shape":"ResourceRecordSet",
        "locationName":"ResourceRecordSet"
      }
    },
    "ResourceRecords":{
      "type":"list",
      "member":{
        "shape":"ResourceRecord",
        "locationName":"ResourceRecord"
      },
      "min":1
    },
    "ResourceTagSet":{
      "type":"structure",
      "members":{
        "ResourceType":{
          "shape":"TagResourceType",
          "documentation":"<p>The type of the resource.</p> <p>- The resource type for health checks is <code>healthcheck</code>.</p> <p>- The resource type for hosted zones is <code>hostedzone</code>.</p>"
        },
        "ResourceId":{
          "shape":"TagResourceId",
          "documentation":"<p>The ID for the specified resource.</p>"
        },
        "Tags":{
          "shape":"TagList",
          "documentation":"<p>The tags associated with the specified resource.</p>"
        }
      },
      "documentation":"<p>A complex type containing a resource and its associated tags.</p>"
    },
    "ResourceTagSetList":{
      "type":"list",
      "member":{
        "shape":"ResourceTagSet",
        "locationName":"ResourceTagSet"
      }
    },
    "ResourceURI":{
      "type":"string",
      "max":1024
    },
    "SearchString":{
      "type":"string",
      "max":255
    },
    "Statistic":{
      "type":"string",
      "enum":[
        "Average",
        "Sum",
        "SampleCount",
        "Maximum",
        "Minimum"
      ]
    },
    "Status":{"type":"string"},
    "StatusReport":{
      "type":"structure",
      "members":{
        "Status":{
          "shape":"Status",
          "documentation":"<p>The observed health check status.</p>"
        },
        "CheckedTime":{
          "shape":"TimeStamp",
          "documentation":"<p>The date and time the health check status was observed, in the format <code>YYYY-MM-DDThh:mm:ssZ</code>, as specified in the ISO 8601 standard (for example, 2009-11-19T19:37:58Z). The <code>Z</code> after the time indicates that the time is listed in Coordinated Universal Time (UTC).</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about the health check status for the current observation.</p>"
    },
    "TTL":{
      "type":"long",
      "max":2147483647,
      "min":0
    },
    "Tag":{
      "type":"structure",
      "members":{
        "Key":{
          "shape":"TagKey",
          "documentation":"<p>The key for a <code>Tag</code>.</p>"
        },
        "Value":{
          "shape":"TagValue",
          "documentation":"<p>The value for a <code>Tag</code>.</p>"
        }
      },
      "documentation":"<p>A single tag containing a key and value.</p>"
    },
    "TagKey":{
      "type":"string",
      "max":128
    },
    "TagKeyList":{
      "type":"list",
      "member":{
        "shape":"TagKey",
        "locationName":"Key"
      },
      "max":10,
      "min":1
    },
    "TagList":{
      "type":"list",
      "member":{
        "shape":"Tag",
        "locationName":"Tag"
      },
      "max":10,
      "min":1
    },
    "TagResourceId":{
      "type":"string",
      "max":64
    },
    "TagResourceIdList":{
      "type":"list",
      "member":{
        "shape":"TagResourceId",
        "locationName":"ResourceId"
      },
      "max":10,
      "min":1
    },
    "TagResourceType":{
      "type":"string",
      "enum":[
        "healthcheck",
        "hostedzone"
      ]
    },
    "TagValue":{
      "type":"string",
      "max":256
    },
    "Threshold":{"type":"double"},
    "ThrottlingException":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "TimeStamp":{"type":"timestamp"},
    "TooManyHealthChecks":{
      "type":"structure",
      "members":{
        "message":{"shape":"ErrorMessage"}
      },
      "exception":true
    },
    "TooManyHostedZones":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>This error indicates that you've reached the maximum number of hosted zones that can be created for the current AWS account. You can request an increase to the limit on the <a href=\"http://aws.amazon.com/route53-request/\">Contact Us</a> page.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "TooManyTrafficPolicies":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>You've created the maximum number of traffic policies that can be created for the current AWS account. You can request an increase to the limit on the <a href=\"http://aws.amazon.com/route53-request/\">Contact Us</a> page.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "TooManyTrafficPolicyInstances":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>You've created the maximum number of traffic policy instances that can be created for the current AWS account. You can request an increase to the limit on the <a href=\"http://aws.amazon.com/route53-request/\">Contact Us</a> page.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "TrafficPolicies":{
      "type":"list",
      "member":{
        "shape":"TrafficPolicy",
        "locationName":"TrafficPolicy"
      }
    },
    "TrafficPolicy":{
      "type":"structure",
      "required":[
        "Id",
        "Version",
        "Name",
        "Type",
        "Document"
      ],
      "members":{
        "Id":{"shape":"TrafficPolicyId"},
        "Version":{"shape":"TrafficPolicyVersion"},
        "Name":{"shape":"TrafficPolicyName"},
        "Type":{"shape":"RRType"},
        "Document":{"shape":"TrafficPolicyDocument"},
        "Comment":{"shape":"TrafficPolicyComment"}
      }
    },
    "TrafficPolicyAlreadyExists":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>A traffic policy that has the same value for <code>Name</code> already exists.</p>",
      "error":{"httpStatusCode":409},
      "exception":true
    },
    "TrafficPolicyComment":{
      "type":"string",
      "max":1024
    },
    "TrafficPolicyDocument":{
      "type":"string",
      "max":102400
    },
    "TrafficPolicyId":{
      "type":"string",
      "max":36
    },
    "TrafficPolicyInUse":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>One or more traffic policy instances were created by using the specified traffic policy.</p>",
      "error":{"httpStatusCode":400},
      "exception":true
    },
    "TrafficPolicyInstance":{
      "type":"structure",
      "required":[
        "Id",
        "HostedZoneId",
        "Name",
        "TTL",
        "State",
        "Message",
        "TrafficPolicyId",
        "TrafficPolicyVersion",
        "TrafficPolicyType"
      ],
      "members":{
        "Id":{"shape":"TrafficPolicyInstanceId"},
        "HostedZoneId":{"shape":"ResourceId"},
        "Name":{"shape":"DNSName"},
        "TTL":{"shape":"TTL"},
        "State":{"shape":"TrafficPolicyInstanceState"},
        "Message":{"shape":"Message"},
        "TrafficPolicyId":{"shape":"TrafficPolicyId"},
        "TrafficPolicyVersion":{"shape":"TrafficPolicyVersion"},
        "TrafficPolicyType":{"shape":"RRType"}
      }
    },
    "TrafficPolicyInstanceAlreadyExists":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>Traffic policy instance with given Id already exists.</p>",
      "error":{"httpStatusCode":409},
      "exception":true
    },
    "TrafficPolicyInstanceCount":{"type":"integer"},
    "TrafficPolicyInstanceId":{
      "type":"string",
      "max":36
    },
    "TrafficPolicyInstanceState":{"type":"string"},
    "TrafficPolicyInstances":{
      "type":"list",
      "member":{
        "shape":"TrafficPolicyInstance",
        "locationName":"TrafficPolicyInstance"
      }
    },
    "TrafficPolicyName":{
      "type":"string",
      "max":512
    },
    "TrafficPolicySummaries":{
      "type":"list",
      "member":{
        "shape":"TrafficPolicySummary",
        "locationName":"TrafficPolicySummary"
      }
    },
    "TrafficPolicySummary":{
      "type":"structure",
      "required":[
        "Id",
        "Name",
        "Type",
        "LatestVersion",
        "TrafficPolicyCount"
      ],
      "members":{
        "Id":{"shape":"TrafficPolicyId"},
        "Name":{"shape":"TrafficPolicyName"},
        "Type":{"shape":"RRType"},
        "LatestVersion":{"shape":"TrafficPolicyVersion"},
        "TrafficPolicyCount":{"shape":"TrafficPolicyVersion"}
      }
    },
    "TrafficPolicyVersion":{
      "type":"integer",
      "max":1000,
      "min":1
    },
    "TrafficPolicyVersionMarker":{
      "type":"string",
      "max":4
    },
    "UpdateHealthCheckRequest":{
      "type":"structure",
      "required":["HealthCheckId"],
      "members":{
        "HealthCheckId":{
          "shape":"HealthCheckId",
          "documentation":"<p>The ID of the health check to update.</p>",
          "location":"uri",
          "locationName":"HealthCheckId"
        },
        "HealthCheckVersion":{
          "shape":"HealthCheckVersion",
          "documentation":"<p>Optional. When you specify a health check version, Amazon Route 53 compares this value with the current value in the health check, which prevents you from updating the health check when the versions don't match. Using <code>HealthCheckVersion</code> lets you prevent overwriting another change to the health check.</p>"
        },
        "IPAddress":{
          "shape":"IPAddress",
          "documentation":"<p>The IP address of the resource that you want to check.</p> <p>Specify this value only if you want to change it.</p>"
        },
        "Port":{
          "shape":"Port",
          "documentation":"<p>The port on which you want Amazon Route 53 to open a connection to perform health checks.</p> <p>Specify this value only if you want to change it.</p>"
        },
        "ResourcePath":{
          "shape":"ResourcePath",
          "documentation":"<p>The path that you want Amazon Route 53 to request when performing health checks. The path can be any value for which your endpoint will return an HTTP status code of 2xx or 3xx when the endpoint is healthy, for example the file /docs/route53-health-check.html. </p> <p>Specify this value only if you want to change it.</p>"
        },
        "FullyQualifiedDomainName":{
          "shape":"FullyQualifiedDomainName",
          "documentation":"<p>Fully qualified domain name of the instance to be health checked.</p> <p>Specify this value only if you want to change it.</p>"
        },
        "SearchString":{
          "shape":"SearchString",
          "documentation":"<p>If the value of <code>Type</code> is <code>HTTP_STR_MATCH</code> or <code>HTTP_STR_MATCH</code>, the string that you want Amazon Route 53 to search for in the response body from the specified resource. If the string appears in the response body, Amazon Route 53 considers the resource healthy. Amazon Route 53 considers case when searching for <code>SearchString</code> in the response body.</p> <p>Specify this value only if you want to change it.</p>"
        },
        "FailureThreshold":{
          "shape":"FailureThreshold",
          "documentation":"<p>The number of consecutive health checks that an endpoint must pass or fail for Amazon Route 53 to change the current status of the endpoint from unhealthy to healthy or vice versa.</p> <p>Valid values are integers between 1 and 10. For more information, see \"How Amazon Route 53 Determines Whether an Endpoint Is Healthy\" in the Amazon Route 53 Developer Guide.</p> <p>Specify this value only if you want to change it.</p>"
        },
        "Inverted":{
          "shape":"Inverted",
          "documentation":"<p>A boolean value that indicates whether the status of health check should be inverted. For example, if a health check is healthy but <code>Inverted</code> is <code>True</code>, then Amazon Route 53 considers the health check to be unhealthy.</p> <p>Specify this value only if you want to change it.</p>"
        },
        "HealthThreshold":{
          "shape":"HealthThreshold",
          "documentation":"<p>The minimum number of child health checks that must be healthy for Amazon Route 53 to consider the parent health check to be healthy. Valid values are integers between 0 and 256, inclusive.</p> <p>Specify this value only if you want to change it.</p>"
        },
        "ChildHealthChecks":{
          "shape":"ChildHealthCheckList",
          "documentation":"<p>For a specified parent health check, a list of <code>HealthCheckId</code> values for the associated child health checks.</p> <p>Specify this value only if you want to change it.</p>"
        },
        "EnableSNI":{
          "shape":"EnableSNI",
          "documentation":"<p>Specify whether you want Amazon Route 53 to send the value of <code>FullyQualifiedDomainName</code> to the endpoint in the <code>client_hello</code> message during TLS negotiation. If you don't specify a value for <code>EnableSNI</code>, Amazon Route 53 defaults to <code>true</code> when <code>Type</code> is <code>HTTPS</code> or <code>HTTPS_STR_MATCH</code> and defaults to <code>false</code> when <code>Type</code> is any other value.</p> <p>Specify this value only if you want to change it.</p>"
        },
        "Regions":{
          "shape":"HealthCheckRegionList",
          "documentation":"<p>A list of <code>HealthCheckRegion</code> values that specify the Amazon EC2 regions that you want Amazon Route 53 to use to perform health checks. You must specify at least three regions.</p> <note>When you remove a region from the list, Amazon Route 53 will briefly continue to check your endpoint from that region.</note> <p>Specify this value only if you want to change it.</p>"
        },
        "AlarmIdentifier":{"shape":"AlarmIdentifier"},
        "InsufficientDataHealthStatus":{"shape":"InsufficientDataHealthStatus"}
      },
      "documentation":"<p>>A complex type that contains information about the request to update a health check.</p>"
    },
    "UpdateHealthCheckResponse":{
      "type":"structure",
      "required":["HealthCheck"],
      "members":{
        "HealthCheck":{"shape":"HealthCheck"}
      }
    },
    "UpdateHostedZoneCommentRequest":{
      "type":"structure",
      "required":["Id"],
      "members":{
        "Id":{
          "shape":"ResourceId",
          "documentation":"<p>The ID of the hosted zone you want to update.</p>",
          "location":"uri",
          "locationName":"Id"
        },
        "Comment":{
          "shape":"ResourceDescription",
          "documentation":"<p>A comment about your hosted zone.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about the request to update a hosted zone comment.</p>"
    },
    "UpdateHostedZoneCommentResponse":{
      "type":"structure",
      "required":["HostedZone"],
      "members":{
        "HostedZone":{"shape":"HostedZone"}
      },
      "documentation":"<p>A complex type containing information about the specified hosted zone after the update.</p>"
    },
    "UpdateTrafficPolicyCommentRequest":{
      "type":"structure",
      "required":[
        "Id",
        "Version",
        "Comment"
      ],
      "members":{
        "Id":{
          "shape":"TrafficPolicyId",
          "documentation":"<p>The value of <code>Id</code> for the traffic policy for which you want to update the comment.</p>",
          "location":"uri",
          "locationName":"Id"
        },
        "Version":{
          "shape":"TrafficPolicyVersion",
          "documentation":"<p>The value of <code>Version</code> for the traffic policy for which you want to update the comment.</p>",
          "location":"uri",
          "locationName":"Version"
        },
        "Comment":{
          "shape":"TrafficPolicyComment",
          "documentation":"<p>The new comment for the specified traffic policy and version.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about the traffic policy for which you want to update the comment.</p>"
    },
    "UpdateTrafficPolicyCommentResponse":{
      "type":"structure",
      "required":["TrafficPolicy"],
      "members":{
        "TrafficPolicy":{
          "shape":"TrafficPolicy",
          "documentation":"<p>A complex type that contains settings for the specified traffic policy.</p>"
        }
      },
      "documentation":"<p>A complex type that contains the response information for the traffic policy.</p>"
    },
    "UpdateTrafficPolicyInstanceRequest":{
      "type":"structure",
      "required":[
        "Id",
        "TTL",
        "TrafficPolicyId",
        "TrafficPolicyVersion"
      ],
      "members":{
        "Id":{
          "shape":"TrafficPolicyInstanceId",
          "documentation":"<p>The ID of the traffic policy instance that you want to update.</p>",
          "location":"uri",
          "locationName":"Id"
        },
        "TTL":{
          "shape":"TTL",
          "documentation":"<p>The TTL that you want Amazon Route 53 to assign to all of the updated resource record sets.</p>"
        },
        "TrafficPolicyId":{
          "shape":"TrafficPolicyId",
          "documentation":"<p>The ID of the traffic policy that you want Amazon Route 53 to use to update resource record sets for the specified traffic policy instance.</p>"
        },
        "TrafficPolicyVersion":{
          "shape":"TrafficPolicyVersion",
          "documentation":"<p>The version of the traffic policy that you want Amazon Route 53 to use to update resource record sets for the specified traffic policy instance.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about the resource record sets that you want to update based on a specified traffic policy instance.</p>"
    },
    "UpdateTrafficPolicyInstanceResponse":{
      "type":"structure",
      "required":["TrafficPolicyInstance"],
      "members":{
        "TrafficPolicyInstance":{
          "shape":"TrafficPolicyInstance",
          "documentation":"<p>A complex type that contains settings for the updated traffic policy instance.</p>"
        }
      },
      "documentation":"<p>A complex type that contains information about the resource record sets that Amazon Route 53 created based on a specified traffic policy.</p>"
    },
    "VPC":{
      "type":"structure",
      "members":{
        "VPCRegion":{"shape":"VPCRegion"},
        "VPCId":{"shape":"VPCId"}
      }
    },
    "VPCAssociationNotFound":{
      "type":"structure",
      "members":{
        "message":{
          "shape":"ErrorMessage",
          "documentation":"<p>Descriptive message for the error response.</p>"
        }
      },
      "documentation":"<p>The VPC you specified is not currently associated with the hosted zone.</p>",
      "error":{"httpStatusCode":404},
      "exception":true
    },
    "VPCId":{
      "type":"string",
      "documentation":"<p>A VPC ID</p>",
      "max":1024
    },
    "VPCRegion":{
      "type":"string",
      "enum":[
        "us-east-1",
        "us-west-1",
        "us-west-2",
        "eu-west-1",
        "eu-central-1",
        "ap-southeast-1",
        "ap-southeast-2",
        "ap-south-1",
        "ap-northeast-1",
        "ap-northeast-2",
        "sa-east-1",
        "cn-north-1"
      ],
      "max":64,
      "min":1
    },
    "VPCs":{
      "type":"list",
      "member":{
        "shape":"VPC",
        "locationName":"VPC"
      },
      "documentation":"<p>A list of VPCs</p>",
      "min":1
    }
  }
}
